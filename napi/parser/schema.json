{
  "Program": {
    "kind": "struct",
    "name": "Program",
    "serName": "Program",
    "size": 104,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 64,
        "flatten": true,
        "skip": false
      },
      {
        "name": "source_type",
        "serName": "sourceType",
        "typeId": 3,
        "offset": 96,
        "flatten": false,
        "skip": false
      },
      {
        "name": "directives",
        "serName": "directives",
        "typeId": 8,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "hashbang",
        "serName": "hashbang",
        "typeId": 13,
        "offset": 72,
        "flatten": false,
        "skip": false
      },
      {
        "name": "body",
        "serName": "body",
        "typeId": 15,
        "offset": 32,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Span": {
    "kind": "struct",
    "name": "Span",
    "serName": "Span",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "start",
        "serName": "start",
        "typeId": 2,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "end",
        "serName": "end",
        "typeId": 2,
        "offset": 4,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": null,
    "transparent": false
  },
  "u32": {
    "kind": "primitive",
    "name": "u32",
    "size": 4,
    "align": 4
  },
  "SourceType": {
    "kind": "struct",
    "name": "SourceType",
    "serName": "SourceType",
    "size": 4,
    "align": 1,
    "fields": [
      {
        "name": "language",
        "serName": "language",
        "typeId": 4,
        "offset": 1,
        "flatten": false,
        "skip": false
      },
      {
        "name": "module_kind",
        "serName": "moduleKind",
        "typeId": 5,
        "offset": 2,
        "flatten": false,
        "skip": false
      },
      {
        "name": "variant",
        "serName": "variant",
        "typeId": 6,
        "offset": 3,
        "flatten": false,
        "skip": false
      },
      {
        "name": "always_strict",
        "serName": "alwaysStrict",
        "typeId": 7,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": null,
    "transparent": false
  },
  "Language": {
    "kind": "enum",
    "name": "Language",
    "serName": "Language",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "JavaScript",
        "discriminant": 0,
        "serValue": "javascript",
        "valueTypeId": null
      },
      {
        "name": "TypeScript",
        "discriminant": 1,
        "serValue": "typescript",
        "valueTypeId": null
      },
      {
        "name": "TypeScriptDefinition",
        "discriminant": 254,
        "serValue": "typescriptDefinition",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "ModuleKind": {
    "kind": "enum",
    "name": "ModuleKind",
    "serName": "ModuleKind",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "Script",
        "discriminant": 0,
        "serValue": "script",
        "valueTypeId": null
      },
      {
        "name": "Module",
        "discriminant": 254,
        "serValue": "module",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "LanguageVariant": {
    "kind": "enum",
    "name": "LanguageVariant",
    "serName": "LanguageVariant",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "Standard",
        "discriminant": 0,
        "serValue": "standard",
        "valueTypeId": null
      },
      {
        "name": "Jsx",
        "discriminant": 254,
        "serValue": "jsx",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "bool": {
    "kind": "primitive",
    "name": "bool",
    "size": 1,
    "align": 1
  },
  "Vec<Directive>": {
    "kind": "vec",
    "name": "Vec<Directive>",
    "size": 32,
    "align": 8,
    "valueTypeId": 9
  },
  "Directive": {
    "kind": "struct",
    "name": "Directive",
    "serName": "Directive",
    "size": 48,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 40,
        "flatten": true,
        "skip": false
      },
      {
        "name": "expression",
        "serName": "expression",
        "typeId": 10,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "directive",
        "serName": "directive",
        "typeId": 11,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "StringLiteral": {
    "kind": "struct",
    "name": "StringLiteral",
    "serName": "StringLiteral",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "value",
        "serName": "value",
        "typeId": 11,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Atom": {
    "kind": "struct",
    "name": "Atom",
    "serName": "Atom",
    "size": 16,
    "align": 8,
    "fields": [
      {
        "name": "0",
        "serName": "0",
        "typeId": 12,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": null,
    "transparent": true
  },
  "&str": {
    "kind": "strSlice",
    "name": "&str",
    "size": 16,
    "align": 8
  },
  "Option<Hashbang>": {
    "kind": "option",
    "name": "Option<Hashbang>",
    "size": 24,
    "align": 8,
    "valueTypeId": 14
  },
  "Hashbang": {
    "kind": "struct",
    "name": "Hashbang",
    "serName": "Hashbang",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "value",
        "serName": "value",
        "typeId": 11,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<Statement>": {
    "kind": "vec",
    "name": "Vec<Statement>",
    "size": 32,
    "align": 8,
    "valueTypeId": 16
  },
  "Statement": {
    "kind": "enum",
    "name": "Statement",
    "serName": "Statement",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "BlockStatement",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 17
      },
      {
        "name": "BreakStatement",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 19
      },
      {
        "name": "ContinueStatement",
        "discriminant": 2,
        "serValue": null,
        "valueTypeId": 23
      },
      {
        "name": "DebuggerStatement",
        "discriminant": 3,
        "serValue": null,
        "valueTypeId": 25
      },
      {
        "name": "DoWhileStatement",
        "discriminant": 4,
        "serValue": null,
        "valueTypeId": 27
      },
      {
        "name": "EmptyStatement",
        "discriminant": 5,
        "serValue": null,
        "valueTypeId": 384
      },
      {
        "name": "ExpressionStatement",
        "discriminant": 6,
        "serValue": null,
        "valueTypeId": 386
      },
      {
        "name": "ForInStatement",
        "discriminant": 7,
        "serValue": null,
        "valueTypeId": 388
      },
      {
        "name": "ForOfStatement",
        "discriminant": 8,
        "serValue": null,
        "valueTypeId": 398
      },
      {
        "name": "ForStatement",
        "discriminant": 9,
        "serValue": null,
        "valueTypeId": 400
      },
      {
        "name": "IfStatement",
        "discriminant": 10,
        "serValue": null,
        "valueTypeId": 404
      },
      {
        "name": "LabeledStatement",
        "discriminant": 11,
        "serValue": null,
        "valueTypeId": 407
      },
      {
        "name": "ReturnStatement",
        "discriminant": 12,
        "serValue": null,
        "valueTypeId": 409
      },
      {
        "name": "SwitchStatement",
        "discriminant": 13,
        "serValue": null,
        "valueTypeId": 411
      },
      {
        "name": "ThrowStatement",
        "discriminant": 14,
        "serValue": null,
        "valueTypeId": 415
      },
      {
        "name": "TryStatement",
        "discriminant": 15,
        "serValue": null,
        "valueTypeId": 417
      },
      {
        "name": "WhileStatement",
        "discriminant": 16,
        "serValue": null,
        "valueTypeId": 425
      },
      {
        "name": "WithStatement",
        "discriminant": 17,
        "serValue": null,
        "valueTypeId": 427
      },
      {
        "name": "ModuleDeclaration",
        "discriminant": 18,
        "serValue": null,
        "valueTypeId": 429
      },
      {
        "name": "Declaration",
        "discriminant": 19,
        "serValue": null,
        "valueTypeId": 470
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<BlockStatement>": {
    "kind": "box",
    "name": "Box<BlockStatement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 18
  },
  "BlockStatement": {
    "kind": "struct",
    "name": "BlockStatement",
    "serName": "BlockStatement",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "body",
        "serName": "body",
        "typeId": 15,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<BreakStatement>": {
    "kind": "box",
    "name": "Box<BreakStatement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 20
  },
  "BreakStatement": {
    "kind": "struct",
    "name": "BreakStatement",
    "serName": "BreakStatement",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      },
      {
        "name": "label",
        "serName": "label",
        "typeId": 21,
        "offset": 8,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<LabelIdentifier>": {
    "kind": "option",
    "name": "Option<LabelIdentifier>",
    "size": 24,
    "align": 8,
    "valueTypeId": 22
  },
  "LabelIdentifier": {
    "kind": "struct",
    "name": "LabelIdentifier",
    "serName": "Identifier",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "name",
        "serName": "name",
        "typeId": 11,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<ContinueStatement>": {
    "kind": "box",
    "name": "Box<ContinueStatement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 24
  },
  "ContinueStatement": {
    "kind": "struct",
    "name": "ContinueStatement",
    "serName": "ContinueStatement",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      },
      {
        "name": "label",
        "serName": "label",
        "typeId": 21,
        "offset": 8,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<DebuggerStatement>": {
    "kind": "box",
    "name": "Box<DebuggerStatement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 26
  },
  "DebuggerStatement": {
    "kind": "struct",
    "name": "DebuggerStatement",
    "serName": "DebuggerStatement",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<DoWhileStatement>": {
    "kind": "box",
    "name": "Box<DoWhileStatement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 28
  },
  "DoWhileStatement": {
    "kind": "struct",
    "name": "DoWhileStatement",
    "serName": "DoWhileStatement",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "body",
        "serName": "body",
        "typeId": 16,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "test",
        "serName": "test",
        "typeId": 29,
        "offset": 16,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Expression": {
    "kind": "enum",
    "name": "Expression",
    "serName": "Expression",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "BooleanLiteral",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 30
      },
      {
        "name": "NullLiteral",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 32
      },
      {
        "name": "NumericLiteral",
        "discriminant": 2,
        "serValue": null,
        "valueTypeId": 34
      },
      {
        "name": "BigintLiteral",
        "discriminant": 3,
        "serValue": null,
        "valueTypeId": 38
      },
      {
        "name": "RegExpLiteral",
        "discriminant": 4,
        "serValue": null,
        "valueTypeId": 41
      },
      {
        "name": "StringLiteral",
        "discriminant": 5,
        "serValue": null,
        "valueTypeId": 46
      },
      {
        "name": "TemplateLiteral",
        "discriminant": 6,
        "serValue": null,
        "valueTypeId": 47
      },
      {
        "name": "Identifier",
        "discriminant": 7,
        "serValue": null,
        "valueTypeId": 54
      },
      {
        "name": "MetaProperty",
        "discriminant": 8,
        "serValue": null,
        "valueTypeId": 60
      },
      {
        "name": "Super",
        "discriminant": 9,
        "serValue": null,
        "valueTypeId": 63
      },
      {
        "name": "ArrayExpression",
        "discriminant": 10,
        "serValue": null,
        "valueTypeId": 65
      },
      {
        "name": "ArrowFunctionExpression",
        "discriminant": 11,
        "serValue": null,
        "valueTypeId": 73
      },
      {
        "name": "AssignmentExpression",
        "discriminant": 12,
        "serValue": null,
        "valueTypeId": 233
      },
      {
        "name": "AwaitExpression",
        "discriminant": 13,
        "serValue": null,
        "valueTypeId": 270
      },
      {
        "name": "BinaryExpression",
        "discriminant": 14,
        "serValue": null,
        "valueTypeId": 272
      },
      {
        "name": "CallExpression",
        "discriminant": 15,
        "serValue": null,
        "valueTypeId": 275
      },
      {
        "name": "ChainExpression",
        "discriminant": 16,
        "serValue": null,
        "valueTypeId": 279
      },
      {
        "name": "ClassExpression",
        "discriminant": 17,
        "serValue": null,
        "valueTypeId": 282
      },
      {
        "name": "ConditionalExpression",
        "discriminant": 18,
        "serValue": null,
        "valueTypeId": 313
      },
      {
        "name": "FunctionExpression",
        "discriminant": 19,
        "serValue": null,
        "valueTypeId": 295
      },
      {
        "name": "ImportExpression",
        "discriminant": 20,
        "serValue": null,
        "valueTypeId": 315
      },
      {
        "name": "LogicalExpression",
        "discriminant": 21,
        "serValue": null,
        "valueTypeId": 317
      },
      {
        "name": "MemberExpression",
        "discriminant": 22,
        "serValue": null,
        "valueTypeId": 238
      },
      {
        "name": "NewExpression",
        "discriminant": 23,
        "serValue": null,
        "valueTypeId": 320
      },
      {
        "name": "ObjectExpression",
        "discriminant": 24,
        "serValue": null,
        "valueTypeId": 322
      },
      {
        "name": "ParenthesizedExpression",
        "discriminant": 25,
        "serValue": null,
        "valueTypeId": 329
      },
      {
        "name": "SequenceExpression",
        "discriminant": 26,
        "serValue": null,
        "valueTypeId": 331
      },
      {
        "name": "TaggedTemplateExpression",
        "discriminant": 27,
        "serValue": null,
        "valueTypeId": 333
      },
      {
        "name": "ThisExpression",
        "discriminant": 28,
        "serValue": null,
        "valueTypeId": 335
      },
      {
        "name": "UnaryExpression",
        "discriminant": 29,
        "serValue": null,
        "valueTypeId": 175
      },
      {
        "name": "UpdateExpression",
        "discriminant": 30,
        "serValue": null,
        "valueTypeId": 337
      },
      {
        "name": "YieldExpression",
        "discriminant": 31,
        "serValue": null,
        "valueTypeId": 340
      },
      {
        "name": "PrivateInExpression",
        "discriminant": 32,
        "serValue": null,
        "valueTypeId": 342
      },
      {
        "name": "JSXElement",
        "discriminant": 33,
        "serValue": null,
        "valueTypeId": 344
      },
      {
        "name": "JSXFragment",
        "discriminant": 34,
        "serValue": null,
        "valueTypeId": 367
      },
      {
        "name": "TSAsExpression",
        "discriminant": 35,
        "serValue": null,
        "valueTypeId": 243
      },
      {
        "name": "TSSatisfiesExpression",
        "discriminant": 36,
        "serValue": null,
        "valueTypeId": 245
      },
      {
        "name": "TSTypeAssertion",
        "discriminant": 37,
        "serValue": null,
        "valueTypeId": 249
      },
      {
        "name": "TSNonNullExpression",
        "discriminant": 38,
        "serValue": null,
        "valueTypeId": 247
      },
      {
        "name": "TSInstantiationExpression",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 382
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<BooleanLiteral>": {
    "kind": "box",
    "name": "Box<BooleanLiteral>",
    "size": 8,
    "align": 8,
    "valueTypeId": 31
  },
  "BooleanLiteral": {
    "kind": "struct",
    "name": "BooleanLiteral",
    "serName": "BooleanLiteral",
    "size": 12,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      },
      {
        "name": "value",
        "serName": "value",
        "typeId": 7,
        "offset": 8,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<NullLiteral>": {
    "kind": "box",
    "name": "Box<NullLiteral>",
    "size": 8,
    "align": 8,
    "valueTypeId": 33
  },
  "NullLiteral": {
    "kind": "struct",
    "name": "NullLiteral",
    "serName": "NullLiteral",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<NumericLiteral>": {
    "kind": "box",
    "name": "Box<NumericLiteral>",
    "size": 8,
    "align": 8,
    "valueTypeId": 35
  },
  "NumericLiteral": {
    "kind": "struct",
    "name": "NumericLiteral",
    "serName": "NumericLiteral",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "value",
        "serName": "value",
        "typeId": 36,
        "offset": 24,
        "flatten": false,
        "skip": false
      },
      {
        "name": "raw",
        "serName": "raw",
        "typeId": 12,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "base",
        "serName": "base",
        "typeId": 37,
        "offset": 32,
        "flatten": false,
        "skip": true
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "f64": {
    "kind": "primitive",
    "name": "f64",
    "size": 8,
    "align": 8
  },
  "NumberBase": {
    "kind": "enum",
    "name": "NumberBase",
    "serName": "NumberBase",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "Float",
        "discriminant": 0,
        "serValue": "Float",
        "valueTypeId": null
      },
      {
        "name": "Decimal",
        "discriminant": 1,
        "serValue": "Decimal",
        "valueTypeId": null
      },
      {
        "name": "Binary",
        "discriminant": 2,
        "serValue": "Binary",
        "valueTypeId": null
      },
      {
        "name": "Octal",
        "discriminant": 3,
        "serValue": "Octal",
        "valueTypeId": null
      },
      {
        "name": "Hex",
        "discriminant": 254,
        "serValue": "Hex",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Box<BigIntLiteral>": {
    "kind": "box",
    "name": "Box<BigIntLiteral>",
    "size": 8,
    "align": 8,
    "valueTypeId": 39
  },
  "BigIntLiteral": {
    "kind": "struct",
    "name": "BigIntLiteral",
    "serName": "BigIntLiteral",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "raw",
        "serName": "raw",
        "typeId": 11,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "base",
        "serName": "base",
        "typeId": 40,
        "offset": 24,
        "flatten": false,
        "skip": true
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "BigintBase": {
    "kind": "enum",
    "name": "BigintBase",
    "serName": "BigintBase",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "Decimal",
        "discriminant": 0,
        "serValue": "Decimal",
        "valueTypeId": null
      },
      {
        "name": "Binary",
        "discriminant": 1,
        "serValue": "Binary",
        "valueTypeId": null
      },
      {
        "name": "Octal",
        "discriminant": 2,
        "serValue": "Octal",
        "valueTypeId": null
      },
      {
        "name": "Hex",
        "discriminant": 254,
        "serValue": "Hex",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Box<RegExpLiteral>": {
    "kind": "box",
    "name": "Box<RegExpLiteral>",
    "size": 8,
    "align": 8,
    "valueTypeId": 42
  },
  "RegExpLiteral": {
    "kind": "struct",
    "name": "RegExpLiteral",
    "serName": "RegExpLiteral",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 24,
        "flatten": true,
        "skip": false
      },
      {
        "name": "value",
        "serName": "value",
        "typeId": 43,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "regex",
        "serName": "regex",
        "typeId": 44,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "EmptyObject": {
    "kind": "struct",
    "name": "EmptyObject",
    "serName": "EmptyObject",
    "size": 0,
    "align": 1,
    "fields": [],
    "tag": null,
    "transparent": false
  },
  "RegExp": {
    "kind": "struct",
    "name": "RegExp",
    "serName": "RegExp",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "pattern",
        "serName": "pattern",
        "typeId": 11,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "flags",
        "serName": "flags",
        "typeId": 45,
        "offset": 16,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": null,
    "transparent": false
  },
  "RegExpFlags": {
    "kind": "primitive",
    "name": "RegExpFlags",
    "size": 1,
    "align": 1
  },
  "Box<StringLiteral>": {
    "kind": "box",
    "name": "Box<StringLiteral>",
    "size": 8,
    "align": 8,
    "valueTypeId": 10
  },
  "Box<TemplateLiteral>": {
    "kind": "box",
    "name": "Box<TemplateLiteral>",
    "size": 8,
    "align": 8,
    "valueTypeId": 48
  },
  "TemplateLiteral": {
    "kind": "struct",
    "name": "TemplateLiteral",
    "serName": "TemplateLiteral",
    "size": 72,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 64,
        "flatten": true,
        "skip": false
      },
      {
        "name": "quasis",
        "serName": "quasis",
        "typeId": 49,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "expressions",
        "serName": "expressions",
        "typeId": 53,
        "offset": 32,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<TemplateElement>": {
    "kind": "vec",
    "name": "Vec<TemplateElement>",
    "size": 32,
    "align": 8,
    "valueTypeId": 50
  },
  "TemplateElement": {
    "kind": "struct",
    "name": "TemplateElement",
    "serName": "TemplateElement",
    "size": 48,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "tail",
        "serName": "tail",
        "typeId": 7,
        "offset": 40,
        "flatten": false,
        "skip": false
      },
      {
        "name": "value",
        "serName": "value",
        "typeId": 51,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "TemplateElementValue": {
    "kind": "struct",
    "name": "TemplateElementValue",
    "serName": "TemplateElementValue",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "raw",
        "serName": "raw",
        "typeId": 11,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "cooked",
        "serName": "cooked",
        "typeId": 52,
        "offset": 16,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": null,
    "transparent": false
  },
  "Option<Atom>": {
    "kind": "option",
    "name": "Option<Atom>",
    "size": 16,
    "align": 8,
    "valueTypeId": 11
  },
  "Vec<Expression>": {
    "kind": "vec",
    "name": "Vec<Expression>",
    "size": 32,
    "align": 8,
    "valueTypeId": 29
  },
  "Box<IdentifierReference>": {
    "kind": "box",
    "name": "Box<IdentifierReference>",
    "size": 8,
    "align": 8,
    "valueTypeId": 55
  },
  "IdentifierReference": {
    "kind": "struct",
    "name": "IdentifierReference",
    "serName": "Identifier",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "name",
        "serName": "name",
        "typeId": 11,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "reference_id",
        "serName": "reference_id",
        "typeId": 56,
        "offset": 24,
        "flatten": false,
        "skip": true
      },
      {
        "name": "reference_flag",
        "serName": "reference_flag",
        "typeId": 59,
        "offset": 32,
        "flatten": false,
        "skip": true
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Cell<Option<ReferenceId>>": {
    "kind": "cell",
    "name": "Cell<Option<ReferenceId>>",
    "size": 8,
    "align": 4,
    "valueTypeId": 57
  },
  "Option<ReferenceId>": {
    "kind": "option",
    "name": "Option<ReferenceId>",
    "size": 8,
    "align": 4,
    "valueTypeId": 58
  },
  "ReferenceId": {
    "kind": "struct",
    "name": "ReferenceId",
    "serName": "ReferenceId",
    "size": 4,
    "align": 4,
    "fields": [
      {
        "name": "_raw",
        "serName": "_raw",
        "typeId": 2,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": null,
    "transparent": false
  },
  "ReferenceFlag": {
    "kind": "primitive",
    "name": "ReferenceFlag",
    "size": 1,
    "align": 1
  },
  "Box<MetaProperty>": {
    "kind": "box",
    "name": "Box<MetaProperty>",
    "size": 8,
    "align": 8,
    "valueTypeId": 61
  },
  "MetaProperty": {
    "kind": "struct",
    "name": "MetaProperty",
    "serName": "MetaProperty",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 48,
        "flatten": true,
        "skip": false
      },
      {
        "name": "meta",
        "serName": "meta",
        "typeId": 62,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "property",
        "serName": "property",
        "typeId": 62,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "IdentifierName": {
    "kind": "struct",
    "name": "IdentifierName",
    "serName": "Identifier",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "name",
        "serName": "name",
        "typeId": 11,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<Super>": {
    "kind": "box",
    "name": "Box<Super>",
    "size": 8,
    "align": 8,
    "valueTypeId": 64
  },
  "Super": {
    "kind": "struct",
    "name": "Super",
    "serName": "Super",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<ArrayExpression>": {
    "kind": "box",
    "name": "Box<ArrayExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 66
  },
  "ArrayExpression": {
    "kind": "struct",
    "name": "ArrayExpression",
    "serName": "ArrayExpression",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "elements",
        "serName": "elements",
        "typeId": 67,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "trailing_comma",
        "serName": "trailingComma",
        "typeId": 72,
        "offset": 40,
        "flatten": false,
        "skip": true
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<ArrayExpressionElement>": {
    "kind": "vec",
    "name": "Vec<ArrayExpressionElement>",
    "size": 32,
    "align": 8,
    "valueTypeId": 68
  },
  "ArrayExpressionElement": {
    "kind": "enum",
    "name": "ArrayExpressionElement",
    "serName": "ArrayExpressionElement",
    "size": 24,
    "align": 8,
    "variants": [
      {
        "name": "SpreadElement",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 69
      },
      {
        "name": "Expression",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 29
      },
      {
        "name": "Elision",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 71
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<SpreadElement>": {
    "kind": "box",
    "name": "Box<SpreadElement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 70
  },
  "SpreadElement": {
    "kind": "struct",
    "name": "SpreadElement",
    "serName": "SpreadElement",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "argument",
        "serName": "argument",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Elision": {
    "kind": "struct",
    "name": "Elision",
    "serName": "Elision",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": null,
    "transparent": false
  },
  "Option<Span>": {
    "kind": "option",
    "name": "Option<Span>",
    "size": 12,
    "align": 4,
    "valueTypeId": 1
  },
  "Box<ArrowFunctionExpression>": {
    "kind": "box",
    "name": "Box<ArrowFunctionExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 74
  },
  "ArrowFunctionExpression": {
    "kind": "struct",
    "name": "ArrowFunctionExpression",
    "serName": "ArrowFunctionExpression",
    "size": 48,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      },
      {
        "name": "expression",
        "serName": "expression",
        "typeId": 7,
        "offset": 40,
        "flatten": false,
        "skip": false
      },
      {
        "name": "async",
        "serName": "async",
        "typeId": 7,
        "offset": 41,
        "flatten": false,
        "skip": false
      },
      {
        "name": "params",
        "serName": "params",
        "typeId": 75,
        "offset": 24,
        "flatten": false,
        "skip": false
      },
      {
        "name": "body",
        "serName": "body",
        "typeId": 231,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 140,
        "offset": 8,
        "flatten": false,
        "skip": false
      },
      {
        "name": "return_type",
        "serName": "returnType",
        "typeId": 104,
        "offset": 16,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<FormalParameters>": {
    "kind": "box",
    "name": "Box<FormalParameters>",
    "size": 8,
    "align": 8,
    "valueTypeId": 76
  },
  "FormalParameters": {
    "kind": "struct",
    "name": "FormalParameters",
    "serName": "FormalParameters",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "kind",
        "serName": "kind",
        "typeId": 77,
        "offset": 48,
        "flatten": false,
        "skip": false
      },
      {
        "name": "items",
        "serName": "items",
        "typeId": 78,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "rest",
        "serName": "rest",
        "typeId": 95,
        "offset": 40,
        "flatten": false,
        "skip": true
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "FormalParameterKind": {
    "kind": "enum",
    "name": "FormalParameterKind",
    "serName": "FormalParameterKind",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "FormalParameter",
        "discriminant": 0,
        "serValue": "FormalParameter",
        "valueTypeId": null
      },
      {
        "name": "UniqueFormalParameters",
        "discriminant": 1,
        "serValue": "UniqueFormalParameters",
        "valueTypeId": null
      },
      {
        "name": "ArrowFormalParameters",
        "discriminant": 2,
        "serValue": "ArrowFormalParameters",
        "valueTypeId": null
      },
      {
        "name": "Signature",
        "discriminant": 254,
        "serValue": "Signature",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Vec<FormalParameter>": {
    "kind": "vec",
    "name": "Vec<FormalParameter>",
    "size": 32,
    "align": 8,
    "valueTypeId": 79
  },
  "FormalParameter": {
    "kind": "struct",
    "name": "FormalParameter",
    "serName": "FormalParameter",
    "size": 80,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "pattern",
        "serName": "pattern",
        "typeId": 80,
        "offset": 40,
        "flatten": false,
        "skip": false
      },
      {
        "name": "accessibility",
        "serName": "accessibility",
        "typeId": 227,
        "offset": 72,
        "flatten": false,
        "skip": false
      },
      {
        "name": "readonly",
        "serName": "readonly",
        "typeId": 7,
        "offset": 73,
        "flatten": false,
        "skip": false
      },
      {
        "name": "override",
        "serName": "override",
        "typeId": 7,
        "offset": 74,
        "flatten": false,
        "skip": false
      },
      {
        "name": "decorators",
        "serName": "decorators",
        "typeId": 229,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "BindingPattern": {
    "kind": "struct",
    "name": "BindingPattern",
    "serName": "BindingPattern",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "kind",
        "serName": "kind",
        "typeId": 81,
        "offset": 0,
        "flatten": true,
        "skip": false
      },
      {
        "name": "type_annotation",
        "serName": "typeAnnotation",
        "typeId": 104,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "optional",
        "serName": "optional",
        "typeId": 7,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": null,
    "transparent": false
  },
  "BindingPatternKind": {
    "kind": "enum",
    "name": "BindingPatternKind",
    "serName": "BindingPatternKind",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "BindingIdentifier",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 82
      },
      {
        "name": "ObjectPattern",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 87
      },
      {
        "name": "ArrayPattern",
        "discriminant": 2,
        "serValue": null,
        "valueTypeId": 98
      },
      {
        "name": "AssignmentPattern",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 102
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<BindingIdentifier>": {
    "kind": "box",
    "name": "Box<BindingIdentifier>",
    "size": 8,
    "align": 8,
    "valueTypeId": 83
  },
  "BindingIdentifier": {
    "kind": "struct",
    "name": "BindingIdentifier",
    "serName": "Identifier",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "name",
        "serName": "name",
        "typeId": 11,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "symbol_id",
        "serName": "symbol_id",
        "typeId": 84,
        "offset": 24,
        "flatten": false,
        "skip": true
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Cell<Option<SymbolId>>": {
    "kind": "cell",
    "name": "Cell<Option<SymbolId>>",
    "size": 8,
    "align": 4,
    "valueTypeId": 85
  },
  "Option<SymbolId>": {
    "kind": "option",
    "name": "Option<SymbolId>",
    "size": 8,
    "align": 4,
    "valueTypeId": 86
  },
  "SymbolId": {
    "kind": "struct",
    "name": "SymbolId",
    "serName": "SymbolId",
    "size": 4,
    "align": 4,
    "fields": [
      {
        "name": "_raw",
        "serName": "_raw",
        "typeId": 2,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": null,
    "transparent": false
  },
  "Box<ObjectPattern>": {
    "kind": "box",
    "name": "Box<ObjectPattern>",
    "size": 8,
    "align": 8,
    "valueTypeId": 88
  },
  "ObjectPattern": {
    "kind": "struct",
    "name": "ObjectPattern",
    "serName": "ObjectPattern",
    "size": 48,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "properties",
        "serName": "properties",
        "typeId": 89,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "rest",
        "serName": "rest",
        "typeId": 95,
        "offset": 40,
        "flatten": false,
        "skip": true
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<BindingProperty>": {
    "kind": "vec",
    "name": "Vec<BindingProperty>",
    "size": 32,
    "align": 8,
    "valueTypeId": 90
  },
  "BindingProperty": {
    "kind": "struct",
    "name": "BindingProperty",
    "serName": "BindingProperty",
    "size": 72,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      },
      {
        "name": "key",
        "serName": "key",
        "typeId": 91,
        "offset": 8,
        "flatten": false,
        "skip": false
      },
      {
        "name": "value",
        "serName": "value",
        "typeId": 80,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "shorthand",
        "serName": "shorthand",
        "typeId": 7,
        "offset": 64,
        "flatten": false,
        "skip": false
      },
      {
        "name": "computed",
        "serName": "computed",
        "typeId": 7,
        "offset": 65,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "PropertyKey": {
    "kind": "enum",
    "name": "PropertyKey",
    "serName": "PropertyKey",
    "size": 24,
    "align": 8,
    "variants": [
      {
        "name": "Identifier",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 92
      },
      {
        "name": "PrivateIdentifier",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 93
      },
      {
        "name": "Expression",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 29
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<IdentifierName>": {
    "kind": "box",
    "name": "Box<IdentifierName>",
    "size": 8,
    "align": 8,
    "valueTypeId": 62
  },
  "Box<PrivateIdentifier>": {
    "kind": "box",
    "name": "Box<PrivateIdentifier>",
    "size": 8,
    "align": 8,
    "valueTypeId": 94
  },
  "PrivateIdentifier": {
    "kind": "struct",
    "name": "PrivateIdentifier",
    "serName": "PrivateIdentifier",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "name",
        "serName": "name",
        "typeId": 11,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<Box<BindingRestElement>>": {
    "kind": "option",
    "name": "Option<Box<BindingRestElement>>",
    "size": 8,
    "align": 8,
    "valueTypeId": 96
  },
  "Box<BindingRestElement>": {
    "kind": "box",
    "name": "Box<BindingRestElement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 97
  },
  "BindingRestElement": {
    "kind": "struct",
    "name": "BindingRestElement",
    "serName": "RestElement",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      },
      {
        "name": "argument",
        "serName": "argument",
        "typeId": 80,
        "offset": 8,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<ArrayPattern>": {
    "kind": "box",
    "name": "Box<ArrayPattern>",
    "size": 8,
    "align": 8,
    "valueTypeId": 99
  },
  "ArrayPattern": {
    "kind": "struct",
    "name": "ArrayPattern",
    "serName": "ArrayPattern",
    "size": 48,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "elements",
        "serName": "elements",
        "typeId": 100,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "rest",
        "serName": "rest",
        "typeId": 95,
        "offset": 40,
        "flatten": false,
        "skip": true
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<Option<BindingPattern>>": {
    "kind": "vec",
    "name": "Vec<Option<BindingPattern>>",
    "size": 32,
    "align": 8,
    "valueTypeId": 101
  },
  "Option<BindingPattern>": {
    "kind": "option",
    "name": "Option<BindingPattern>",
    "size": 32,
    "align": 8,
    "valueTypeId": 80
  },
  "Box<AssignmentPattern>": {
    "kind": "box",
    "name": "Box<AssignmentPattern>",
    "size": 8,
    "align": 8,
    "valueTypeId": 103
  },
  "AssignmentPattern": {
    "kind": "struct",
    "name": "AssignmentPattern",
    "serName": "AssignmentPattern",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "left",
        "serName": "left",
        "typeId": 80,
        "offset": 24,
        "flatten": false,
        "skip": false
      },
      {
        "name": "right",
        "serName": "right",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<Box<TSTypeAnnotation>>": {
    "kind": "option",
    "name": "Option<Box<TSTypeAnnotation>>",
    "size": 8,
    "align": 8,
    "valueTypeId": 105
  },
  "Box<TSTypeAnnotation>": {
    "kind": "box",
    "name": "Box<TSTypeAnnotation>",
    "size": 8,
    "align": 8,
    "valueTypeId": 106
  },
  "TSTypeAnnotation": {
    "kind": "struct",
    "name": "TSTypeAnnotation",
    "serName": "TSTypeAnnotation",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "type_annotation",
        "serName": "typeAnnotation",
        "typeId": 107,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "TSType": {
    "kind": "enum",
    "name": "TSType",
    "serName": "TSType",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "TSAnyKeyword",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 108
      },
      {
        "name": "TSBigIntKeyword",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 110
      },
      {
        "name": "TSBooleanKeyword",
        "discriminant": 2,
        "serValue": null,
        "valueTypeId": 112
      },
      {
        "name": "TSNeverKeyword",
        "discriminant": 3,
        "serValue": null,
        "valueTypeId": 114
      },
      {
        "name": "TSNullKeyword",
        "discriminant": 4,
        "serValue": null,
        "valueTypeId": 116
      },
      {
        "name": "TSNumberKeyword",
        "discriminant": 5,
        "serValue": null,
        "valueTypeId": 118
      },
      {
        "name": "TSObjectKeyword",
        "discriminant": 6,
        "serValue": null,
        "valueTypeId": 120
      },
      {
        "name": "TSStringKeyword",
        "discriminant": 7,
        "serValue": null,
        "valueTypeId": 122
      },
      {
        "name": "TSSymbolKeyword",
        "discriminant": 8,
        "serValue": null,
        "valueTypeId": 124
      },
      {
        "name": "TSThisType",
        "discriminant": 9,
        "serValue": null,
        "valueTypeId": 126
      },
      {
        "name": "TSUndefinedKeyword",
        "discriminant": 10,
        "serValue": null,
        "valueTypeId": 128
      },
      {
        "name": "TSUnknownKeyword",
        "discriminant": 11,
        "serValue": null,
        "valueTypeId": 130
      },
      {
        "name": "TSVoidKeyword",
        "discriminant": 12,
        "serValue": null,
        "valueTypeId": 132
      },
      {
        "name": "TSArrayType",
        "discriminant": 13,
        "serValue": null,
        "valueTypeId": 134
      },
      {
        "name": "TSConditionalType",
        "discriminant": 14,
        "serValue": null,
        "valueTypeId": 136
      },
      {
        "name": "TSConstructorType",
        "discriminant": 15,
        "serValue": null,
        "valueTypeId": 138
      },
      {
        "name": "TSFunctionType",
        "discriminant": 16,
        "serValue": null,
        "valueTypeId": 146
      },
      {
        "name": "TSImportType",
        "discriminant": 17,
        "serValue": null,
        "valueTypeId": 150
      },
      {
        "name": "TSIndexedAccessType",
        "discriminant": 18,
        "serValue": null,
        "valueTypeId": 165
      },
      {
        "name": "TSInferType",
        "discriminant": 19,
        "serValue": null,
        "valueTypeId": 167
      },
      {
        "name": "TSIntersectionType",
        "discriminant": 20,
        "serValue": null,
        "valueTypeId": 170
      },
      {
        "name": "TSLiteralType",
        "discriminant": 21,
        "serValue": null,
        "valueTypeId": 172
      },
      {
        "name": "TSMappedType",
        "discriminant": 22,
        "serValue": null,
        "valueTypeId": 178
      },
      {
        "name": "TSNamedTupleMember",
        "discriminant": 23,
        "serValue": null,
        "valueTypeId": 181
      },
      {
        "name": "TSQualifiedName",
        "discriminant": 24,
        "serValue": null,
        "valueTypeId": 154
      },
      {
        "name": "TSTemplateLiteralType",
        "discriminant": 25,
        "serValue": null,
        "valueTypeId": 183
      },
      {
        "name": "TSTupleType",
        "discriminant": 26,
        "serValue": null,
        "valueTypeId": 185
      },
      {
        "name": "TSTypeLiteral",
        "discriminant": 27,
        "serValue": null,
        "valueTypeId": 193
      },
      {
        "name": "TSTypeOperatorType",
        "discriminant": 28,
        "serValue": null,
        "valueTypeId": 210
      },
      {
        "name": "TSTypePredicate",
        "discriminant": 29,
        "serValue": null,
        "valueTypeId": 213
      },
      {
        "name": "TSTypeQuery",
        "discriminant": 30,
        "serValue": null,
        "valueTypeId": 216
      },
      {
        "name": "TSTypeReference",
        "discriminant": 31,
        "serValue": null,
        "valueTypeId": 219
      },
      {
        "name": "TSUnionType",
        "discriminant": 32,
        "serValue": null,
        "valueTypeId": 221
      },
      {
        "name": "JSDocNullableType",
        "discriminant": 33,
        "serValue": null,
        "valueTypeId": 223
      },
      {
        "name": "JSDocUnknownType",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 225
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<TSAnyKeyword>": {
    "kind": "box",
    "name": "Box<TSAnyKeyword>",
    "size": 8,
    "align": 8,
    "valueTypeId": 109
  },
  "TSAnyKeyword": {
    "kind": "struct",
    "name": "TSAnyKeyword",
    "serName": "TSAnyKeyword",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSBigIntKeyword>": {
    "kind": "box",
    "name": "Box<TSBigIntKeyword>",
    "size": 8,
    "align": 8,
    "valueTypeId": 111
  },
  "TSBigIntKeyword": {
    "kind": "struct",
    "name": "TSBigIntKeyword",
    "serName": "TSBigIntKeyword",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSBooleanKeyword>": {
    "kind": "box",
    "name": "Box<TSBooleanKeyword>",
    "size": 8,
    "align": 8,
    "valueTypeId": 113
  },
  "TSBooleanKeyword": {
    "kind": "struct",
    "name": "TSBooleanKeyword",
    "serName": "TSBooleanKeyword",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSNeverKeyword>": {
    "kind": "box",
    "name": "Box<TSNeverKeyword>",
    "size": 8,
    "align": 8,
    "valueTypeId": 115
  },
  "TSNeverKeyword": {
    "kind": "struct",
    "name": "TSNeverKeyword",
    "serName": "TSNeverKeyword",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSNullKeyword>": {
    "kind": "box",
    "name": "Box<TSNullKeyword>",
    "size": 8,
    "align": 8,
    "valueTypeId": 117
  },
  "TSNullKeyword": {
    "kind": "struct",
    "name": "TSNullKeyword",
    "serName": "TSNullKeyword",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSNumberKeyword>": {
    "kind": "box",
    "name": "Box<TSNumberKeyword>",
    "size": 8,
    "align": 8,
    "valueTypeId": 119
  },
  "TSNumberKeyword": {
    "kind": "struct",
    "name": "TSNumberKeyword",
    "serName": "TSNumberKeyword",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSObjectKeyword>": {
    "kind": "box",
    "name": "Box<TSObjectKeyword>",
    "size": 8,
    "align": 8,
    "valueTypeId": 121
  },
  "TSObjectKeyword": {
    "kind": "struct",
    "name": "TSObjectKeyword",
    "serName": "TSObjectKeyword",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSStringKeyword>": {
    "kind": "box",
    "name": "Box<TSStringKeyword>",
    "size": 8,
    "align": 8,
    "valueTypeId": 123
  },
  "TSStringKeyword": {
    "kind": "struct",
    "name": "TSStringKeyword",
    "serName": "TSStringKeyword",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSSymbolKeyword>": {
    "kind": "box",
    "name": "Box<TSSymbolKeyword>",
    "size": 8,
    "align": 8,
    "valueTypeId": 125
  },
  "TSSymbolKeyword": {
    "kind": "struct",
    "name": "TSSymbolKeyword",
    "serName": "TSSymbolKeyword",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSThisType>": {
    "kind": "box",
    "name": "Box<TSThisType>",
    "size": 8,
    "align": 8,
    "valueTypeId": 127
  },
  "TSThisType": {
    "kind": "struct",
    "name": "TSThisType",
    "serName": "TSThisType",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSUndefinedKeyword>": {
    "kind": "box",
    "name": "Box<TSUndefinedKeyword>",
    "size": 8,
    "align": 8,
    "valueTypeId": 129
  },
  "TSUndefinedKeyword": {
    "kind": "struct",
    "name": "TSUndefinedKeyword",
    "serName": "TSUndefinedKeyword",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSUnknownKeyword>": {
    "kind": "box",
    "name": "Box<TSUnknownKeyword>",
    "size": 8,
    "align": 8,
    "valueTypeId": 131
  },
  "TSUnknownKeyword": {
    "kind": "struct",
    "name": "TSUnknownKeyword",
    "serName": "TSUnknownKeyword",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSVoidKeyword>": {
    "kind": "box",
    "name": "Box<TSVoidKeyword>",
    "size": 8,
    "align": 8,
    "valueTypeId": 133
  },
  "TSVoidKeyword": {
    "kind": "struct",
    "name": "TSVoidKeyword",
    "serName": "TSVoidKeyword",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSArrayType>": {
    "kind": "box",
    "name": "Box<TSArrayType>",
    "size": 8,
    "align": 8,
    "valueTypeId": 135
  },
  "TSArrayType": {
    "kind": "struct",
    "name": "TSArrayType",
    "serName": "TSArrayType",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "element_type",
        "serName": "elementType",
        "typeId": 107,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSConditionalType>": {
    "kind": "box",
    "name": "Box<TSConditionalType>",
    "size": 8,
    "align": 8,
    "valueTypeId": 137
  },
  "TSConditionalType": {
    "kind": "struct",
    "name": "TSConditionalType",
    "serName": "TSConditionalType",
    "size": 72,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 64,
        "flatten": true,
        "skip": false
      },
      {
        "name": "check_type",
        "serName": "checkType",
        "typeId": 107,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "extends_type",
        "serName": "extendsType",
        "typeId": 107,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "true_type",
        "serName": "trueType",
        "typeId": 107,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "false_type",
        "serName": "falseType",
        "typeId": 107,
        "offset": 48,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSConstructorType>": {
    "kind": "box",
    "name": "Box<TSConstructorType>",
    "size": 8,
    "align": 8,
    "valueTypeId": 139
  },
  "TSConstructorType": {
    "kind": "struct",
    "name": "TSConstructorType",
    "serName": "TSConstructorType",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "abstract",
        "serName": "abstract",
        "typeId": 7,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "params",
        "serName": "params",
        "typeId": 75,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "return_type",
        "serName": "returnType",
        "typeId": 105,
        "offset": 8,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 140,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<Box<TSTypeParameterDeclaration>>": {
    "kind": "option",
    "name": "Option<Box<TSTypeParameterDeclaration>>",
    "size": 8,
    "align": 8,
    "valueTypeId": 141
  },
  "Box<TSTypeParameterDeclaration>": {
    "kind": "box",
    "name": "Box<TSTypeParameterDeclaration>",
    "size": 8,
    "align": 8,
    "valueTypeId": 142
  },
  "TSTypeParameterDeclaration": {
    "kind": "struct",
    "name": "TSTypeParameterDeclaration",
    "serName": "TSTypeParameterDeclaration",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "params",
        "serName": "params",
        "typeId": 143,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<TSTypeParameter>": {
    "kind": "vec",
    "name": "Vec<TSTypeParameter>",
    "size": 32,
    "align": 8,
    "valueTypeId": 144
  },
  "TSTypeParameter": {
    "kind": "struct",
    "name": "TSTypeParameter",
    "serName": "TSTypeParameter",
    "size": 80,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 64,
        "flatten": true,
        "skip": false
      },
      {
        "name": "name",
        "serName": "name",
        "typeId": 83,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "constraint",
        "serName": "constraint",
        "typeId": 145,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "default",
        "serName": "default",
        "typeId": 145,
        "offset": 48,
        "flatten": false,
        "skip": false
      },
      {
        "name": "in",
        "serName": "in",
        "typeId": 7,
        "offset": 72,
        "flatten": false,
        "skip": false
      },
      {
        "name": "out",
        "serName": "out",
        "typeId": 7,
        "offset": 73,
        "flatten": false,
        "skip": false
      },
      {
        "name": "const",
        "serName": "const",
        "typeId": 7,
        "offset": 74,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<TSType>": {
    "kind": "option",
    "name": "Option<TSType>",
    "size": 16,
    "align": 8,
    "valueTypeId": 107
  },
  "Box<TSFunctionType>": {
    "kind": "box",
    "name": "Box<TSFunctionType>",
    "size": 8,
    "align": 8,
    "valueTypeId": 147
  },
  "TSFunctionType": {
    "kind": "struct",
    "name": "TSFunctionType",
    "serName": "TSFunctionType",
    "size": 72,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "this_param",
        "serName": "thisParam",
        "typeId": 148,
        "offset": 24,
        "flatten": false,
        "skip": false
      },
      {
        "name": "params",
        "serName": "params",
        "typeId": 75,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "return_type",
        "serName": "returnType",
        "typeId": 105,
        "offset": 8,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 140,
        "offset": 64,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<TSThisParameter>": {
    "kind": "option",
    "name": "Option<TSThisParameter>",
    "size": 40,
    "align": 8,
    "valueTypeId": 149
  },
  "TSThisParameter": {
    "kind": "struct",
    "name": "TSThisParameter",
    "serName": "TSThisParameter",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 24,
        "flatten": true,
        "skip": false
      },
      {
        "name": "this",
        "serName": "this",
        "typeId": 62,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_annotation",
        "serName": "typeAnnotation",
        "typeId": 104,
        "offset": 32,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSImportType>": {
    "kind": "box",
    "name": "Box<TSImportType>",
    "size": 8,
    "align": 8,
    "valueTypeId": 151
  },
  "TSImportType": {
    "kind": "struct",
    "name": "TSImportType",
    "serName": "TSImportType",
    "size": 88,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "argument",
        "serName": "argument",
        "typeId": 107,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "qualifier",
        "serName": "qualifier",
        "typeId": 152,
        "offset": 24,
        "flatten": false,
        "skip": false
      },
      {
        "name": "attributes",
        "serName": "attributes",
        "typeId": 156,
        "offset": 40,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 161,
        "offset": 80,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<TSTypeName>": {
    "kind": "option",
    "name": "Option<TSTypeName>",
    "size": 16,
    "align": 8,
    "valueTypeId": 153
  },
  "TSTypeName": {
    "kind": "enum",
    "name": "TSTypeName",
    "serName": "TSTypeName",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "IdentifierReference",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 54
      },
      {
        "name": "QualifiedName",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 154
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<TSQualifiedName>": {
    "kind": "box",
    "name": "Box<TSQualifiedName>",
    "size": 8,
    "align": 8,
    "valueTypeId": 155
  },
  "TSQualifiedName": {
    "kind": "struct",
    "name": "TSQualifiedName",
    "serName": "TSQualifiedName",
    "size": 48,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 40,
        "flatten": true,
        "skip": false
      },
      {
        "name": "left",
        "serName": "left",
        "typeId": 153,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "right",
        "serName": "right",
        "typeId": 62,
        "offset": 16,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<TSImportAttributes>": {
    "kind": "option",
    "name": "Option<TSImportAttributes>",
    "size": 40,
    "align": 8,
    "valueTypeId": 157
  },
  "TSImportAttributes": {
    "kind": "struct",
    "name": "TSImportAttributes",
    "serName": "TSImportAttributes",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "elements",
        "serName": "elements",
        "typeId": 158,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<TSImportAttribute>": {
    "kind": "vec",
    "name": "Vec<TSImportAttribute>",
    "size": 32,
    "align": 8,
    "valueTypeId": 159
  },
  "TSImportAttribute": {
    "kind": "struct",
    "name": "TSImportAttribute",
    "serName": "TSImportAttribute",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 48,
        "flatten": true,
        "skip": false
      },
      {
        "name": "name",
        "serName": "name",
        "typeId": 160,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "value",
        "serName": "value",
        "typeId": 29,
        "offset": 32,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "TSImportAttributeName": {
    "kind": "enum",
    "name": "TSImportAttributeName",
    "serName": "TSImportAttributeName",
    "size": 32,
    "align": 8,
    "variants": [
      {
        "name": "Identifier",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 62
      },
      {
        "name": "StringLiteral",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 10
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Option<Box<TSTypeParameterInstantiation>>": {
    "kind": "option",
    "name": "Option<Box<TSTypeParameterInstantiation>>",
    "size": 8,
    "align": 8,
    "valueTypeId": 162
  },
  "Box<TSTypeParameterInstantiation>": {
    "kind": "box",
    "name": "Box<TSTypeParameterInstantiation>",
    "size": 8,
    "align": 8,
    "valueTypeId": 163
  },
  "TSTypeParameterInstantiation": {
    "kind": "struct",
    "name": "TSTypeParameterInstantiation",
    "serName": "TSTypeParameterInstantiation",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "params",
        "serName": "params",
        "typeId": 164,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<TSType>": {
    "kind": "vec",
    "name": "Vec<TSType>",
    "size": 32,
    "align": 8,
    "valueTypeId": 107
  },
  "Box<TSIndexedAccessType>": {
    "kind": "box",
    "name": "Box<TSIndexedAccessType>",
    "size": 8,
    "align": 8,
    "valueTypeId": 166
  },
  "TSIndexedAccessType": {
    "kind": "struct",
    "name": "TSIndexedAccessType",
    "serName": "TSIndexedAccessType",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "object_type",
        "serName": "objectType",
        "typeId": 107,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "index_type",
        "serName": "indexType",
        "typeId": 107,
        "offset": 16,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSInferType>": {
    "kind": "box",
    "name": "Box<TSInferType>",
    "size": 8,
    "align": 8,
    "valueTypeId": 168
  },
  "TSInferType": {
    "kind": "struct",
    "name": "TSInferType",
    "serName": "TSInferType",
    "size": 16,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 8,
        "flatten": true,
        "skip": false
      },
      {
        "name": "type_parameter",
        "serName": "typeParameter",
        "typeId": 169,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSTypeParameter>": {
    "kind": "box",
    "name": "Box<TSTypeParameter>",
    "size": 8,
    "align": 8,
    "valueTypeId": 144
  },
  "Box<TSIntersectionType>": {
    "kind": "box",
    "name": "Box<TSIntersectionType>",
    "size": 8,
    "align": 8,
    "valueTypeId": 171
  },
  "TSIntersectionType": {
    "kind": "struct",
    "name": "TSIntersectionType",
    "serName": "TSIntersectionType",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "types",
        "serName": "types",
        "typeId": 164,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSLiteralType>": {
    "kind": "box",
    "name": "Box<TSLiteralType>",
    "size": 8,
    "align": 8,
    "valueTypeId": 173
  },
  "TSLiteralType": {
    "kind": "struct",
    "name": "TSLiteralType",
    "serName": "TSLiteralType",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "literal",
        "serName": "literal",
        "typeId": 174,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "TSLiteral": {
    "kind": "enum",
    "name": "TSLiteral",
    "serName": "TSLiteral",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "BooleanLiteral",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 30
      },
      {
        "name": "NullLiteral",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 32
      },
      {
        "name": "NumericLiteral",
        "discriminant": 2,
        "serValue": null,
        "valueTypeId": 34
      },
      {
        "name": "BigintLiteral",
        "discriminant": 3,
        "serValue": null,
        "valueTypeId": 38
      },
      {
        "name": "RegExpLiteral",
        "discriminant": 4,
        "serValue": null,
        "valueTypeId": 41
      },
      {
        "name": "StringLiteral",
        "discriminant": 5,
        "serValue": null,
        "valueTypeId": 46
      },
      {
        "name": "TemplateLiteral",
        "discriminant": 6,
        "serValue": null,
        "valueTypeId": 47
      },
      {
        "name": "UnaryExpression",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 175
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<UnaryExpression>": {
    "kind": "box",
    "name": "Box<UnaryExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 176
  },
  "UnaryExpression": {
    "kind": "struct",
    "name": "UnaryExpression",
    "serName": "UnaryExpression",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "operator",
        "serName": "operator",
        "typeId": 177,
        "offset": 24,
        "flatten": false,
        "skip": false
      },
      {
        "name": "argument",
        "serName": "argument",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "UnaryOperator": {
    "kind": "enum",
    "name": "UnaryOperator",
    "serName": "UnaryOperator",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "UnaryNegation",
        "discriminant": 0,
        "serValue": "-",
        "valueTypeId": null
      },
      {
        "name": "UnaryPlus",
        "discriminant": 1,
        "serValue": "+",
        "valueTypeId": null
      },
      {
        "name": "LogicalNot",
        "discriminant": 2,
        "serValue": "!",
        "valueTypeId": null
      },
      {
        "name": "BitwiseNot",
        "discriminant": 3,
        "serValue": "~",
        "valueTypeId": null
      },
      {
        "name": "Typeof",
        "discriminant": 4,
        "serValue": "typeof",
        "valueTypeId": null
      },
      {
        "name": "Void",
        "discriminant": 5,
        "serValue": "void",
        "valueTypeId": null
      },
      {
        "name": "Delete",
        "discriminant": 254,
        "serValue": "delete",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Box<TSMappedType>": {
    "kind": "box",
    "name": "Box<TSMappedType>",
    "size": 8,
    "align": 8,
    "valueTypeId": 179
  },
  "TSMappedType": {
    "kind": "struct",
    "name": "TSMappedType",
    "serName": "TSMappedType",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 8,
        "flatten": true,
        "skip": false
      },
      {
        "name": "type_parameter",
        "serName": "typeParameter",
        "typeId": 169,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "name_type",
        "serName": "nameType",
        "typeId": 145,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_annotation",
        "serName": "typeAnnotation",
        "typeId": 145,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "optional",
        "serName": "optional",
        "typeId": 180,
        "offset": 48,
        "flatten": false,
        "skip": false
      },
      {
        "name": "readonly",
        "serName": "readonly",
        "typeId": 180,
        "offset": 49,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "TSMappedTypeModifierOperator": {
    "kind": "enum",
    "name": "TSMappedTypeModifierOperator",
    "serName": "TSMappedTypeModifierOperator",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "True",
        "discriminant": 0,
        "serValue": "true",
        "valueTypeId": null
      },
      {
        "name": "Plus",
        "discriminant": 1,
        "serValue": "+",
        "valueTypeId": null
      },
      {
        "name": "Minus",
        "discriminant": 2,
        "serValue": "-",
        "valueTypeId": null
      },
      {
        "name": "None",
        "discriminant": 254,
        "serValue": "none",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Box<TSNamedTupleMember>": {
    "kind": "box",
    "name": "Box<TSNamedTupleMember>",
    "size": 8,
    "align": 8,
    "valueTypeId": 182
  },
  "TSNamedTupleMember": {
    "kind": "struct",
    "name": "TSNamedTupleMember",
    "serName": "TSNamedTupleMember",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 40,
        "flatten": true,
        "skip": false
      },
      {
        "name": "element_type",
        "serName": "elementType",
        "typeId": 107,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "label",
        "serName": "label",
        "typeId": 62,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "optional",
        "serName": "optional",
        "typeId": 7,
        "offset": 48,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSTemplateLiteralType>": {
    "kind": "box",
    "name": "Box<TSTemplateLiteralType>",
    "size": 8,
    "align": 8,
    "valueTypeId": 184
  },
  "TSTemplateLiteralType": {
    "kind": "struct",
    "name": "TSTemplateLiteralType",
    "serName": "TSTemplateLiteralType",
    "size": 72,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 64,
        "flatten": true,
        "skip": false
      },
      {
        "name": "quasis",
        "serName": "quasis",
        "typeId": 49,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "types",
        "serName": "types",
        "typeId": 164,
        "offset": 32,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSTupleType>": {
    "kind": "box",
    "name": "Box<TSTupleType>",
    "size": 8,
    "align": 8,
    "valueTypeId": 186
  },
  "TSTupleType": {
    "kind": "struct",
    "name": "TSTupleType",
    "serName": "TSTupleType",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "element_types",
        "serName": "elementTypes",
        "typeId": 187,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<TSTupleElement>": {
    "kind": "vec",
    "name": "Vec<TSTupleElement>",
    "size": 32,
    "align": 8,
    "valueTypeId": 188
  },
  "TSTupleElement": {
    "kind": "enum",
    "name": "TSTupleElement",
    "serName": "TSTupleElement",
    "size": 24,
    "align": 8,
    "variants": [
      {
        "name": "TSType",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 107
      },
      {
        "name": "TSOptionalType",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 189
      },
      {
        "name": "TSRestType",
        "discriminant": 2,
        "serValue": null,
        "valueTypeId": 191
      },
      {
        "name": "TSNamedTupleMember",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 181
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<TSOptionalType>": {
    "kind": "box",
    "name": "Box<TSOptionalType>",
    "size": 8,
    "align": 8,
    "valueTypeId": 190
  },
  "TSOptionalType": {
    "kind": "struct",
    "name": "TSOptionalType",
    "serName": "TSOptionalType",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "type_annotation",
        "serName": "typeAnnotation",
        "typeId": 107,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSRestType>": {
    "kind": "box",
    "name": "Box<TSRestType>",
    "size": 8,
    "align": 8,
    "valueTypeId": 192
  },
  "TSRestType": {
    "kind": "struct",
    "name": "TSRestType",
    "serName": "TSRestType",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "type_annotation",
        "serName": "typeAnnotation",
        "typeId": 107,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSTypeLiteral>": {
    "kind": "box",
    "name": "Box<TSTypeLiteral>",
    "size": 8,
    "align": 8,
    "valueTypeId": 194
  },
  "TSTypeLiteral": {
    "kind": "struct",
    "name": "TSTypeLiteral",
    "serName": "TSTypeLiteral",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "members",
        "serName": "members",
        "typeId": 195,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<TSSignature>": {
    "kind": "vec",
    "name": "Vec<TSSignature>",
    "size": 32,
    "align": 8,
    "valueTypeId": 196
  },
  "TSSignature": {
    "kind": "enum",
    "name": "TSSignature",
    "serName": "TSSignature",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "TSIndexSignature",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 197
      },
      {
        "name": "TSPropertySignature",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 201
      },
      {
        "name": "TSCallSignatureDeclaration",
        "discriminant": 2,
        "serValue": null,
        "valueTypeId": 203
      },
      {
        "name": "TSConstructSignatureDeclaration",
        "discriminant": 3,
        "serValue": null,
        "valueTypeId": 205
      },
      {
        "name": "TSMethodSignature",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 207
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<TSIndexSignature>": {
    "kind": "box",
    "name": "Box<TSIndexSignature>",
    "size": 8,
    "align": 8,
    "valueTypeId": 198
  },
  "TSIndexSignature": {
    "kind": "struct",
    "name": "TSIndexSignature",
    "serName": "TSIndexSignature",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 40,
        "flatten": true,
        "skip": false
      },
      {
        "name": "parameters",
        "serName": "parameters",
        "typeId": 199,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_annotation",
        "serName": "typeAnnotation",
        "typeId": 105,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "readonly",
        "serName": "readonly",
        "typeId": 7,
        "offset": 48,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<TSIndexSignatureName>": {
    "kind": "vec",
    "name": "Vec<TSIndexSignatureName>",
    "size": 32,
    "align": 8,
    "valueTypeId": 200
  },
  "TSIndexSignatureName": {
    "kind": "struct",
    "name": "TSIndexSignatureName",
    "serName": "Identifier",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 24,
        "flatten": true,
        "skip": false
      },
      {
        "name": "name",
        "serName": "name",
        "typeId": 11,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_annotation",
        "serName": "typeAnnotation",
        "typeId": 105,
        "offset": 16,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSPropertySignature>": {
    "kind": "box",
    "name": "Box<TSPropertySignature>",
    "size": 8,
    "align": 8,
    "valueTypeId": 202
  },
  "TSPropertySignature": {
    "kind": "struct",
    "name": "TSPropertySignature",
    "serName": "TSPropertySignature",
    "size": 48,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      },
      {
        "name": "computed",
        "serName": "computed",
        "typeId": 7,
        "offset": 40,
        "flatten": false,
        "skip": false
      },
      {
        "name": "optional",
        "serName": "optional",
        "typeId": 7,
        "offset": 41,
        "flatten": false,
        "skip": false
      },
      {
        "name": "readonly",
        "serName": "readonly",
        "typeId": 7,
        "offset": 42,
        "flatten": false,
        "skip": false
      },
      {
        "name": "key",
        "serName": "key",
        "typeId": 91,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_annotation",
        "serName": "typeAnnotation",
        "typeId": 104,
        "offset": 8,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSCallSignatureDeclaration>": {
    "kind": "box",
    "name": "Box<TSCallSignatureDeclaration>",
    "size": 8,
    "align": 8,
    "valueTypeId": 204
  },
  "TSCallSignatureDeclaration": {
    "kind": "struct",
    "name": "TSCallSignatureDeclaration",
    "serName": "TSCallSignatureDeclaration",
    "size": 72,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 8,
        "flatten": true,
        "skip": false
      },
      {
        "name": "this_param",
        "serName": "thisParam",
        "typeId": 148,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "params",
        "serName": "params",
        "typeId": 75,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "return_type",
        "serName": "returnType",
        "typeId": 104,
        "offset": 56,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 140,
        "offset": 64,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSConstructSignatureDeclaration>": {
    "kind": "box",
    "name": "Box<TSConstructSignatureDeclaration>",
    "size": 8,
    "align": 8,
    "valueTypeId": 206
  },
  "TSConstructSignatureDeclaration": {
    "kind": "struct",
    "name": "TSConstructSignatureDeclaration",
    "serName": "TSConstructSignatureDeclaration",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 8,
        "flatten": true,
        "skip": false
      },
      {
        "name": "params",
        "serName": "params",
        "typeId": 75,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "return_type",
        "serName": "returnType",
        "typeId": 104,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 140,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSMethodSignature>": {
    "kind": "box",
    "name": "Box<TSMethodSignature>",
    "size": 8,
    "align": 8,
    "valueTypeId": 208
  },
  "TSMethodSignature": {
    "kind": "struct",
    "name": "TSMethodSignature",
    "serName": "TSMethodSignature",
    "size": 104,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      },
      {
        "name": "key",
        "serName": "key",
        "typeId": 91,
        "offset": 64,
        "flatten": false,
        "skip": false
      },
      {
        "name": "computed",
        "serName": "computed",
        "typeId": 7,
        "offset": 97,
        "flatten": false,
        "skip": false
      },
      {
        "name": "optional",
        "serName": "optional",
        "typeId": 7,
        "offset": 98,
        "flatten": false,
        "skip": false
      },
      {
        "name": "kind",
        "serName": "kind",
        "typeId": 209,
        "offset": 96,
        "flatten": false,
        "skip": false
      },
      {
        "name": "this_param",
        "serName": "thisParam",
        "typeId": 148,
        "offset": 8,
        "flatten": false,
        "skip": false
      },
      {
        "name": "params",
        "serName": "params",
        "typeId": 75,
        "offset": 88,
        "flatten": false,
        "skip": false
      },
      {
        "name": "return_type",
        "serName": "returnType",
        "typeId": 104,
        "offset": 48,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 140,
        "offset": 56,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "TSMethodSignatureKind": {
    "kind": "enum",
    "name": "TSMethodSignatureKind",
    "serName": "TSMethodSignatureKind",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "Method",
        "discriminant": 0,
        "serValue": "method",
        "valueTypeId": null
      },
      {
        "name": "Get",
        "discriminant": 1,
        "serValue": "get",
        "valueTypeId": null
      },
      {
        "name": "Set",
        "discriminant": 254,
        "serValue": "set",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Box<TSTypeOperator>": {
    "kind": "box",
    "name": "Box<TSTypeOperator>",
    "size": 8,
    "align": 8,
    "valueTypeId": 211
  },
  "TSTypeOperator": {
    "kind": "struct",
    "name": "TSTypeOperator",
    "serName": "TSTypeOperator",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "operator",
        "serName": "operator",
        "typeId": 212,
        "offset": 24,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_annotation",
        "serName": "typeAnnotation",
        "typeId": 107,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "TSTypeOperatorOperator": {
    "kind": "enum",
    "name": "TSTypeOperatorOperator",
    "serName": "TSTypeOperatorOperator",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "Keyof",
        "discriminant": 0,
        "serValue": "keyof",
        "valueTypeId": null
      },
      {
        "name": "Unique",
        "discriminant": 1,
        "serValue": "unique",
        "valueTypeId": null
      },
      {
        "name": "Readonly",
        "discriminant": 254,
        "serValue": "readonly",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Box<TSTypePredicate>": {
    "kind": "box",
    "name": "Box<TSTypePredicate>",
    "size": 8,
    "align": 8,
    "valueTypeId": 214
  },
  "TSTypePredicate": {
    "kind": "struct",
    "name": "TSTypePredicate",
    "serName": "TSTypePredicate",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "parameter_name",
        "serName": "parameterName",
        "typeId": 215,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "asserts",
        "serName": "asserts",
        "typeId": 7,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_annotation",
        "serName": "typeAnnotation",
        "typeId": 104,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "TSTypePredicateName": {
    "kind": "enum",
    "name": "TSTypePredicateName",
    "serName": "TSTypePredicateName",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "Identifier",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 92
      },
      {
        "name": "This",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 127
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<TSTypeQuery>": {
    "kind": "box",
    "name": "Box<TSTypeQuery>",
    "size": 8,
    "align": 8,
    "valueTypeId": 217
  },
  "TSTypeQuery": {
    "kind": "struct",
    "name": "TSTypeQuery",
    "serName": "TSTypeQuery",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 24,
        "flatten": true,
        "skip": false
      },
      {
        "name": "expr_name",
        "serName": "exprName",
        "typeId": 218,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 161,
        "offset": 32,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "TSTypeQueryExprName": {
    "kind": "enum",
    "name": "TSTypeQueryExprName",
    "serName": "TSTypeQueryExprName",
    "size": 24,
    "align": 8,
    "variants": [
      {
        "name": "TSTypeName",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 153
      },
      {
        "name": "TSImportType",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 150
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<TSTypeReference>": {
    "kind": "box",
    "name": "Box<TSTypeReference>",
    "size": 8,
    "align": 8,
    "valueTypeId": 220
  },
  "TSTypeReference": {
    "kind": "struct",
    "name": "TSTypeReference",
    "serName": "TSTypeReference",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "type_name",
        "serName": "typeName",
        "typeId": 153,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 161,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSUnionType>": {
    "kind": "box",
    "name": "Box<TSUnionType>",
    "size": 8,
    "align": 8,
    "valueTypeId": 222
  },
  "TSUnionType": {
    "kind": "struct",
    "name": "TSUnionType",
    "serName": "TSUnionType",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "types",
        "serName": "types",
        "typeId": 164,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<JSDocNullableType>": {
    "kind": "box",
    "name": "Box<JSDocNullableType>",
    "size": 8,
    "align": 8,
    "valueTypeId": 224
  },
  "JSDocNullableType": {
    "kind": "struct",
    "name": "JSDocNullableType",
    "serName": "JSDocNullableType",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "type_annotation",
        "serName": "typeAnnotation",
        "typeId": 107,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "postfix",
        "serName": "postfix",
        "typeId": 7,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<JSDocUnknownType>": {
    "kind": "box",
    "name": "Box<JSDocUnknownType>",
    "size": 8,
    "align": 8,
    "valueTypeId": 226
  },
  "JSDocUnknownType": {
    "kind": "struct",
    "name": "JSDocUnknownType",
    "serName": "JSDocUnknownType",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<TSAccessibility>": {
    "kind": "option",
    "name": "Option<TSAccessibility>",
    "size": 1,
    "align": 1,
    "valueTypeId": 228
  },
  "TSAccessibility": {
    "kind": "enum",
    "name": "TSAccessibility",
    "serName": "TSAccessibility",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "Private",
        "discriminant": 0,
        "serValue": "private",
        "valueTypeId": null
      },
      {
        "name": "Protected",
        "discriminant": 1,
        "serValue": "protected",
        "valueTypeId": null
      },
      {
        "name": "Public",
        "discriminant": 254,
        "serValue": "public",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Vec<Decorator>": {
    "kind": "vec",
    "name": "Vec<Decorator>",
    "size": 32,
    "align": 8,
    "valueTypeId": 230
  },
  "Decorator": {
    "kind": "struct",
    "name": "Decorator",
    "serName": "Decorator",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "expression",
        "serName": "expression",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<FunctionBody>": {
    "kind": "box",
    "name": "Box<FunctionBody>",
    "size": 8,
    "align": 8,
    "valueTypeId": 232
  },
  "FunctionBody": {
    "kind": "struct",
    "name": "FunctionBody",
    "serName": "FunctionBody",
    "size": 72,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 64,
        "flatten": true,
        "skip": false
      },
      {
        "name": "directives",
        "serName": "directives",
        "typeId": 8,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "statements",
        "serName": "statements",
        "typeId": 15,
        "offset": 32,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<AssignmentExpression>": {
    "kind": "box",
    "name": "Box<AssignmentExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 234
  },
  "AssignmentExpression": {
    "kind": "struct",
    "name": "AssignmentExpression",
    "serName": "AssignmentExpression",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 40,
        "flatten": true,
        "skip": false
      },
      {
        "name": "operator",
        "serName": "operator",
        "typeId": 235,
        "offset": 48,
        "flatten": false,
        "skip": false
      },
      {
        "name": "left",
        "serName": "left",
        "typeId": 236,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "right",
        "serName": "right",
        "typeId": 29,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "AssignmentOperator": {
    "kind": "enum",
    "name": "AssignmentOperator",
    "serName": "AssignmentOperator",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "Assign",
        "discriminant": 0,
        "serValue": "=",
        "valueTypeId": null
      },
      {
        "name": "Addition",
        "discriminant": 1,
        "serValue": "+=",
        "valueTypeId": null
      },
      {
        "name": "Subtraction",
        "discriminant": 2,
        "serValue": "-=",
        "valueTypeId": null
      },
      {
        "name": "Multiplication",
        "discriminant": 3,
        "serValue": "*=",
        "valueTypeId": null
      },
      {
        "name": "Division",
        "discriminant": 4,
        "serValue": "/=",
        "valueTypeId": null
      },
      {
        "name": "Remainder",
        "discriminant": 5,
        "serValue": "%=",
        "valueTypeId": null
      },
      {
        "name": "ShiftLeft",
        "discriminant": 6,
        "serValue": "<<=",
        "valueTypeId": null
      },
      {
        "name": "ShiftRight",
        "discriminant": 7,
        "serValue": ">>=",
        "valueTypeId": null
      },
      {
        "name": "ShiftRightZeroFill",
        "discriminant": 8,
        "serValue": ">>>=",
        "valueTypeId": null
      },
      {
        "name": "BitwiseOR",
        "discriminant": 9,
        "serValue": "|=",
        "valueTypeId": null
      },
      {
        "name": "BitwiseXOR",
        "discriminant": 10,
        "serValue": "^=",
        "valueTypeId": null
      },
      {
        "name": "BitwiseAnd",
        "discriminant": 11,
        "serValue": "&=",
        "valueTypeId": null
      },
      {
        "name": "LogicalAnd",
        "discriminant": 12,
        "serValue": "&&=",
        "valueTypeId": null
      },
      {
        "name": "LogicalOr",
        "discriminant": 13,
        "serValue": "||=",
        "valueTypeId": null
      },
      {
        "name": "LogicalNullish",
        "discriminant": 14,
        "serValue": "??=",
        "valueTypeId": null
      },
      {
        "name": "Exponential",
        "discriminant": 254,
        "serValue": "**=",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "AssignmentTarget": {
    "kind": "enum",
    "name": "AssignmentTarget",
    "serName": "AssignmentTarget",
    "size": 24,
    "align": 8,
    "variants": [
      {
        "name": "SimpleAssignmentTarget",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 237
      },
      {
        "name": "AssignmentTargetPattern",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 251
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "SimpleAssignmentTarget": {
    "kind": "enum",
    "name": "SimpleAssignmentTarget",
    "serName": "SimpleAssignmentTarget",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "AssignmentTargetIdentifier",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 54
      },
      {
        "name": "MemberAssignmentTarget",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 238
      },
      {
        "name": "TSAsExpression",
        "discriminant": 2,
        "serValue": null,
        "valueTypeId": 243
      },
      {
        "name": "TSSatisfiesExpression",
        "discriminant": 3,
        "serValue": null,
        "valueTypeId": 245
      },
      {
        "name": "TSNonNullExpression",
        "discriminant": 4,
        "serValue": null,
        "valueTypeId": 247
      },
      {
        "name": "TSTypeAssertion",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 249
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<MemberExpression>": {
    "kind": "box",
    "name": "Box<MemberExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 239
  },
  "MemberExpression": {
    "kind": "enum",
    "name": "MemberExpression",
    "serName": "MemberExpression",
    "size": 64,
    "align": 8,
    "variants": [
      {
        "name": "ComputedMemberExpression",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 240
      },
      {
        "name": "StaticMemberExpression",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 241
      },
      {
        "name": "PrivateFieldExpression",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 242
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "ComputedMemberExpression": {
    "kind": "struct",
    "name": "ComputedMemberExpression",
    "serName": "ComputedMemberExpression",
    "size": 48,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "object",
        "serName": "object",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "expression",
        "serName": "expression",
        "typeId": 29,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "optional",
        "serName": "optional",
        "typeId": 7,
        "offset": 40,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "StaticMemberExpression": {
    "kind": "struct",
    "name": "StaticMemberExpression",
    "serName": "StaticMemberExpression",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 40,
        "flatten": true,
        "skip": false
      },
      {
        "name": "object",
        "serName": "object",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "property",
        "serName": "property",
        "typeId": 62,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "optional",
        "serName": "optional",
        "typeId": 7,
        "offset": 48,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "PrivateFieldExpression": {
    "kind": "struct",
    "name": "PrivateFieldExpression",
    "serName": "PrivateFieldExpression",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 40,
        "flatten": true,
        "skip": false
      },
      {
        "name": "object",
        "serName": "object",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "field",
        "serName": "field",
        "typeId": 94,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "optional",
        "serName": "optional",
        "typeId": 7,
        "offset": 48,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSAsExpression>": {
    "kind": "box",
    "name": "Box<TSAsExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 244
  },
  "TSAsExpression": {
    "kind": "struct",
    "name": "TSAsExpression",
    "serName": "TSAsExpression",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "expression",
        "serName": "expression",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_annotation",
        "serName": "typeAnnotation",
        "typeId": 107,
        "offset": 16,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSSatisfiesExpression>": {
    "kind": "box",
    "name": "Box<TSSatisfiesExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 246
  },
  "TSSatisfiesExpression": {
    "kind": "struct",
    "name": "TSSatisfiesExpression",
    "serName": "TSSatisfiesExpression",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "expression",
        "serName": "expression",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_annotation",
        "serName": "typeAnnotation",
        "typeId": 107,
        "offset": 16,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSNonNullExpression>": {
    "kind": "box",
    "name": "Box<TSNonNullExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 248
  },
  "TSNonNullExpression": {
    "kind": "struct",
    "name": "TSNonNullExpression",
    "serName": "TSNonNullExpression",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "expression",
        "serName": "expression",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSTypeAssertion>": {
    "kind": "box",
    "name": "Box<TSTypeAssertion>",
    "size": 8,
    "align": 8,
    "valueTypeId": 250
  },
  "TSTypeAssertion": {
    "kind": "struct",
    "name": "TSTypeAssertion",
    "serName": "TSTypeAssertion",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "expression",
        "serName": "expression",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_annotation",
        "serName": "typeAnnotation",
        "typeId": 107,
        "offset": 16,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "AssignmentTargetPattern": {
    "kind": "enum",
    "name": "AssignmentTargetPattern",
    "serName": "AssignmentTargetPattern",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "ArrayAssignmentTarget",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 252
      },
      {
        "name": "ObjectAssignmentTarget",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 261
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<ArrayAssignmentTarget>": {
    "kind": "box",
    "name": "Box<ArrayAssignmentTarget>",
    "size": 8,
    "align": 8,
    "valueTypeId": 253
  },
  "ArrayAssignmentTarget": {
    "kind": "struct",
    "name": "ArrayAssignmentTarget",
    "serName": "ArrayAssignmentTarget",
    "size": 88,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 64,
        "flatten": true,
        "skip": false
      },
      {
        "name": "elements",
        "serName": "elements",
        "typeId": 254,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "rest",
        "serName": "rest",
        "typeId": 259,
        "offset": 32,
        "flatten": false,
        "skip": true
      },
      {
        "name": "trailing_comma",
        "serName": "trailing_comma",
        "typeId": 72,
        "offset": 72,
        "flatten": false,
        "skip": true
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<Option<AssignmentTargetMaybeDefault>>": {
    "kind": "vec",
    "name": "Vec<Option<AssignmentTargetMaybeDefault>>",
    "size": 32,
    "align": 8,
    "valueTypeId": 255
  },
  "Option<AssignmentTargetMaybeDefault>": {
    "kind": "option",
    "name": "Option<AssignmentTargetMaybeDefault>",
    "size": 24,
    "align": 8,
    "valueTypeId": 256
  },
  "AssignmentTargetMaybeDefault": {
    "kind": "enum",
    "name": "AssignmentTargetMaybeDefault",
    "serName": "AssignmentTargetMaybeDefault",
    "size": 24,
    "align": 8,
    "variants": [
      {
        "name": "AssignmentTarget",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 236
      },
      {
        "name": "AssignmentTargetWithDefault",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 257
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<AssignmentTargetWithDefault>": {
    "kind": "box",
    "name": "Box<AssignmentTargetWithDefault>",
    "size": 8,
    "align": 8,
    "valueTypeId": 258
  },
  "AssignmentTargetWithDefault": {
    "kind": "struct",
    "name": "AssignmentTargetWithDefault",
    "serName": "AssignmentTargetWithDefault",
    "size": 48,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 40,
        "flatten": true,
        "skip": false
      },
      {
        "name": "binding",
        "serName": "binding",
        "typeId": 236,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "init",
        "serName": "init",
        "typeId": 29,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<AssignmentTargetRest>": {
    "kind": "option",
    "name": "Option<AssignmentTargetRest>",
    "size": 32,
    "align": 8,
    "valueTypeId": 260
  },
  "AssignmentTargetRest": {
    "kind": "struct",
    "name": "AssignmentTargetRest",
    "serName": "RestElement",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 24,
        "flatten": true,
        "skip": false
      },
      {
        "name": "target",
        "serName": "argument",
        "typeId": 236,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<ObjectAssignmentTarget>": {
    "kind": "box",
    "name": "Box<ObjectAssignmentTarget>",
    "size": 8,
    "align": 8,
    "valueTypeId": 262
  },
  "ObjectAssignmentTarget": {
    "kind": "struct",
    "name": "ObjectAssignmentTarget",
    "serName": "ObjectAssignmentTarget",
    "size": 72,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 64,
        "flatten": true,
        "skip": false
      },
      {
        "name": "properties",
        "serName": "properties",
        "typeId": 263,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "rest",
        "serName": "rest",
        "typeId": 259,
        "offset": 32,
        "flatten": false,
        "skip": true
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<AssignmentTargetProperty>": {
    "kind": "vec",
    "name": "Vec<AssignmentTargetProperty>",
    "size": 32,
    "align": 8,
    "valueTypeId": 264
  },
  "AssignmentTargetProperty": {
    "kind": "enum",
    "name": "AssignmentTargetProperty",
    "serName": "AssignmentTargetProperty",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "AssignmentTargetPropertyIdentifier",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 265
      },
      {
        "name": "AssignmentTargetPropertyProperty",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 268
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<AssignmentTargetPropertyIdentifier>": {
    "kind": "box",
    "name": "Box<AssignmentTargetPropertyIdentifier>",
    "size": 8,
    "align": 8,
    "valueTypeId": 266
  },
  "AssignmentTargetPropertyIdentifier": {
    "kind": "struct",
    "name": "AssignmentTargetPropertyIdentifier",
    "serName": "AssignmentTargetPropertyIdentifier",
    "size": 64,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 40,
        "flatten": true,
        "skip": false
      },
      {
        "name": "binding",
        "serName": "binding",
        "typeId": 55,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "init",
        "serName": "init",
        "typeId": 267,
        "offset": 48,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<Expression>": {
    "kind": "option",
    "name": "Option<Expression>",
    "size": 16,
    "align": 8,
    "valueTypeId": 29
  },
  "Box<AssignmentTargetPropertyProperty>": {
    "kind": "box",
    "name": "Box<AssignmentTargetPropertyProperty>",
    "size": 8,
    "align": 8,
    "valueTypeId": 269
  },
  "AssignmentTargetPropertyProperty": {
    "kind": "struct",
    "name": "AssignmentTargetPropertyProperty",
    "serName": "AssignmentTargetPropertyProperty",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 48,
        "flatten": true,
        "skip": false
      },
      {
        "name": "name",
        "serName": "name",
        "typeId": 91,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "binding",
        "serName": "binding",
        "typeId": 256,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<AwaitExpression>": {
    "kind": "box",
    "name": "Box<AwaitExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 271
  },
  "AwaitExpression": {
    "kind": "struct",
    "name": "AwaitExpression",
    "serName": "AwaitExpression",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "argument",
        "serName": "argument",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<BinaryExpression>": {
    "kind": "box",
    "name": "Box<BinaryExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 273
  },
  "BinaryExpression": {
    "kind": "struct",
    "name": "BinaryExpression",
    "serName": "BinaryExpression",
    "size": 48,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "left",
        "serName": "left",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "operator",
        "serName": "operator",
        "typeId": 274,
        "offset": 40,
        "flatten": false,
        "skip": false
      },
      {
        "name": "right",
        "serName": "right",
        "typeId": 29,
        "offset": 16,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "BinaryOperator": {
    "kind": "enum",
    "name": "BinaryOperator",
    "serName": "BinaryOperator",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "Equality",
        "discriminant": 0,
        "serValue": "==",
        "valueTypeId": null
      },
      {
        "name": "Inequality",
        "discriminant": 1,
        "serValue": "!=",
        "valueTypeId": null
      },
      {
        "name": "StrictEquality",
        "discriminant": 2,
        "serValue": "===",
        "valueTypeId": null
      },
      {
        "name": "StrictInequality",
        "discriminant": 3,
        "serValue": "!==",
        "valueTypeId": null
      },
      {
        "name": "LessThan",
        "discriminant": 4,
        "serValue": "<",
        "valueTypeId": null
      },
      {
        "name": "LessEqualThan",
        "discriminant": 5,
        "serValue": "<=",
        "valueTypeId": null
      },
      {
        "name": "GreaterThan",
        "discriminant": 6,
        "serValue": ">",
        "valueTypeId": null
      },
      {
        "name": "GreaterEqualThan",
        "discriminant": 7,
        "serValue": ">=",
        "valueTypeId": null
      },
      {
        "name": "ShiftLeft",
        "discriminant": 8,
        "serValue": "<<",
        "valueTypeId": null
      },
      {
        "name": "ShiftRight",
        "discriminant": 9,
        "serValue": ">>",
        "valueTypeId": null
      },
      {
        "name": "ShiftRightZeroFill",
        "discriminant": 10,
        "serValue": ">>>",
        "valueTypeId": null
      },
      {
        "name": "Addition",
        "discriminant": 11,
        "serValue": "+",
        "valueTypeId": null
      },
      {
        "name": "Subtraction",
        "discriminant": 12,
        "serValue": "-",
        "valueTypeId": null
      },
      {
        "name": "Multiplication",
        "discriminant": 13,
        "serValue": "*",
        "valueTypeId": null
      },
      {
        "name": "Division",
        "discriminant": 14,
        "serValue": "/",
        "valueTypeId": null
      },
      {
        "name": "Remainder",
        "discriminant": 15,
        "serValue": "%",
        "valueTypeId": null
      },
      {
        "name": "BitwiseOR",
        "discriminant": 16,
        "serValue": "|",
        "valueTypeId": null
      },
      {
        "name": "BitwiseXOR",
        "discriminant": 17,
        "serValue": "^",
        "valueTypeId": null
      },
      {
        "name": "BitwiseAnd",
        "discriminant": 18,
        "serValue": "&",
        "valueTypeId": null
      },
      {
        "name": "In",
        "discriminant": 19,
        "serValue": "in",
        "valueTypeId": null
      },
      {
        "name": "Instanceof",
        "discriminant": 20,
        "serValue": "instanceof",
        "valueTypeId": null
      },
      {
        "name": "Exponential",
        "discriminant": 254,
        "serValue": "**",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Box<CallExpression>": {
    "kind": "box",
    "name": "Box<CallExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 276
  },
  "CallExpression": {
    "kind": "struct",
    "name": "CallExpression",
    "serName": "CallExpression",
    "size": 72,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 48,
        "flatten": true,
        "skip": false
      },
      {
        "name": "callee",
        "serName": "callee",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "arguments",
        "serName": "arguments",
        "typeId": 277,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "optional",
        "serName": "optional",
        "typeId": 7,
        "offset": 64,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 161,
        "offset": 56,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<Argument>": {
    "kind": "vec",
    "name": "Vec<Argument>",
    "size": 32,
    "align": 8,
    "valueTypeId": 278
  },
  "Argument": {
    "kind": "enum",
    "name": "Argument",
    "serName": "Argument",
    "size": 24,
    "align": 8,
    "variants": [
      {
        "name": "SpreadElement",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 69
      },
      {
        "name": "Expression",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 29
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<ChainExpression>": {
    "kind": "box",
    "name": "Box<ChainExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 280
  },
  "ChainExpression": {
    "kind": "struct",
    "name": "ChainExpression",
    "serName": "ChainExpression",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "expression",
        "serName": "expression",
        "typeId": 281,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "ChainElement": {
    "kind": "enum",
    "name": "ChainElement",
    "serName": "ChainElement",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "CallExpression",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 275
      },
      {
        "name": "MemberExpression",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 238
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<Class>": {
    "kind": "box",
    "name": "Box<Class>",
    "size": 8,
    "align": 8,
    "valueTypeId": 283
  },
  "Class": {
    "kind": "struct",
    "name": "Class",
    "serName": "Class",
    "size": 184,
    "align": 8,
    "fields": [
      {
        "name": "type",
        "serName": "type",
        "typeId": 284,
        "offset": 176,
        "flatten": false,
        "skip": false
      },
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 40,
        "flatten": true,
        "skip": false
      },
      {
        "name": "id",
        "serName": "id",
        "typeId": 285,
        "offset": 48,
        "flatten": false,
        "skip": false
      },
      {
        "name": "super_class",
        "serName": "superClass",
        "typeId": 267,
        "offset": 80,
        "flatten": false,
        "skip": false
      },
      {
        "name": "body",
        "serName": "body",
        "typeId": 286,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 140,
        "offset": 96,
        "flatten": false,
        "skip": false
      },
      {
        "name": "super_type_parameters",
        "serName": "superTypeParameters",
        "typeId": 161,
        "offset": 104,
        "flatten": false,
        "skip": false
      },
      {
        "name": "implements",
        "serName": "implements",
        "typeId": 310,
        "offset": 112,
        "flatten": false,
        "skip": false
      },
      {
        "name": "decorators",
        "serName": "decorators",
        "typeId": 229,
        "offset": 8,
        "flatten": false,
        "skip": false
      },
      {
        "name": "modifiers",
        "serName": "modifiers",
        "typeId": 299,
        "offset": 144,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": null,
    "transparent": false
  },
  "ClassType": {
    "kind": "enum",
    "name": "ClassType",
    "serName": "ClassType",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "ClassDeclaration",
        "discriminant": 0,
        "serValue": "ClassDeclaration",
        "valueTypeId": null
      },
      {
        "name": "ClassExpression",
        "discriminant": 254,
        "serValue": "ClassExpression",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Option<BindingIdentifier>": {
    "kind": "option",
    "name": "Option<BindingIdentifier>",
    "size": 32,
    "align": 8,
    "valueTypeId": 83
  },
  "Box<ClassBody>": {
    "kind": "box",
    "name": "Box<ClassBody>",
    "size": 8,
    "align": 8,
    "valueTypeId": 287
  },
  "ClassBody": {
    "kind": "struct",
    "name": "ClassBody",
    "serName": "ClassBody",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "body",
        "serName": "body",
        "typeId": 288,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<ClassElement>": {
    "kind": "vec",
    "name": "Vec<ClassElement>",
    "size": 32,
    "align": 8,
    "valueTypeId": 289
  },
  "ClassElement": {
    "kind": "enum",
    "name": "ClassElement",
    "serName": "ClassElement",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "StaticBlock",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 290
      },
      {
        "name": "MethodDefinition",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 292
      },
      {
        "name": "PropertyDefinition",
        "discriminant": 2,
        "serValue": null,
        "valueTypeId": 305
      },
      {
        "name": "AccessorProperty",
        "discriminant": 3,
        "serValue": null,
        "valueTypeId": 308
      },
      {
        "name": "TSIndexSignature",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 197
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<StaticBlock>": {
    "kind": "box",
    "name": "Box<StaticBlock>",
    "size": 8,
    "align": 8,
    "valueTypeId": 291
  },
  "StaticBlock": {
    "kind": "struct",
    "name": "StaticBlock",
    "serName": "StaticBlock",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "body",
        "serName": "body",
        "typeId": 15,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<MethodDefinition>": {
    "kind": "box",
    "name": "Box<MethodDefinition>",
    "size": 8,
    "align": 8,
    "valueTypeId": 293
  },
  "MethodDefinition": {
    "kind": "struct",
    "name": "MethodDefinition",
    "serName": "MethodDefinition",
    "size": 80,
    "align": 8,
    "fields": [
      {
        "name": "type",
        "serName": "type",
        "typeId": 294,
        "offset": 73,
        "flatten": false,
        "skip": false
      },
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "key",
        "serName": "key",
        "typeId": 91,
        "offset": 40,
        "flatten": false,
        "skip": false
      },
      {
        "name": "value",
        "serName": "value",
        "typeId": 295,
        "offset": 64,
        "flatten": false,
        "skip": false
      },
      {
        "name": "kind",
        "serName": "kind",
        "typeId": 304,
        "offset": 74,
        "flatten": false,
        "skip": false
      },
      {
        "name": "computed",
        "serName": "computed",
        "typeId": 7,
        "offset": 75,
        "flatten": false,
        "skip": false
      },
      {
        "name": "static",
        "serName": "static",
        "typeId": 7,
        "offset": 76,
        "flatten": false,
        "skip": false
      },
      {
        "name": "override",
        "serName": "override",
        "typeId": 7,
        "offset": 77,
        "flatten": false,
        "skip": false
      },
      {
        "name": "optional",
        "serName": "optional",
        "typeId": 7,
        "offset": 78,
        "flatten": false,
        "skip": false
      },
      {
        "name": "accessibility",
        "serName": "accessibility",
        "typeId": 227,
        "offset": 72,
        "flatten": false,
        "skip": false
      },
      {
        "name": "decorators",
        "serName": "decorators",
        "typeId": 229,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": null,
    "transparent": false
  },
  "MethodDefinitionType": {
    "kind": "enum",
    "name": "MethodDefinitionType",
    "serName": "MethodDefinitionType",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "MethodDefinition",
        "discriminant": 0,
        "serValue": "MethodDefinition",
        "valueTypeId": null
      },
      {
        "name": "TSAbstractMethodDefinition",
        "discriminant": 254,
        "serValue": "TSAbstractMethodDefinition",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Box<Function>": {
    "kind": "box",
    "name": "Box<Function>",
    "size": 8,
    "align": 8,
    "valueTypeId": 296
  },
  "Function": {
    "kind": "struct",
    "name": "Function",
    "serName": "Function",
    "size": 152,
    "align": 8,
    "fields": [
      {
        "name": "type",
        "serName": "type",
        "typeId": 297,
        "offset": 144,
        "flatten": false,
        "skip": false
      },
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 64,
        "flatten": true,
        "skip": false
      },
      {
        "name": "id",
        "serName": "id",
        "typeId": 285,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "generator",
        "serName": "generator",
        "typeId": 7,
        "offset": 145,
        "flatten": false,
        "skip": false
      },
      {
        "name": "async",
        "serName": "async",
        "typeId": 7,
        "offset": 146,
        "flatten": false,
        "skip": false
      },
      {
        "name": "this_param",
        "serName": "thisParam",
        "typeId": 148,
        "offset": 72,
        "flatten": false,
        "skip": false
      },
      {
        "name": "params",
        "serName": "params",
        "typeId": 75,
        "offset": 136,
        "flatten": false,
        "skip": false
      },
      {
        "name": "body",
        "serName": "body",
        "typeId": 298,
        "offset": 112,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 140,
        "offset": 120,
        "flatten": false,
        "skip": false
      },
      {
        "name": "return_type",
        "serName": "returnType",
        "typeId": 104,
        "offset": 128,
        "flatten": false,
        "skip": false
      },
      {
        "name": "modifiers",
        "serName": "modifiers",
        "typeId": 299,
        "offset": 32,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": null,
    "transparent": false
  },
  "FunctionType": {
    "kind": "enum",
    "name": "FunctionType",
    "serName": "FunctionType",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "FunctionDeclaration",
        "discriminant": 0,
        "serValue": "FunctionDeclaration",
        "valueTypeId": null
      },
      {
        "name": "FunctionExpression",
        "discriminant": 1,
        "serValue": "FunctionExpression",
        "valueTypeId": null
      },
      {
        "name": "TSDeclareFunction",
        "discriminant": 2,
        "serValue": "TSDeclareFunction",
        "valueTypeId": null
      },
      {
        "name": "TSEmptyBodyFunctionExpression",
        "discriminant": 254,
        "serValue": "TSEmptyBodyFunctionExpression",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Option<Box<FunctionBody>>": {
    "kind": "option",
    "name": "Option<Box<FunctionBody>>",
    "size": 8,
    "align": 8,
    "valueTypeId": 231
  },
  "Modifiers": {
    "kind": "struct",
    "name": "Modifiers",
    "serName": "Modifiers",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "0",
        "serName": "0",
        "typeId": 300,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": null,
    "transparent": true
  },
  "Option<Vec<Modifier>>": {
    "kind": "option",
    "name": "Option<Vec<Modifier>>",
    "size": 32,
    "align": 8,
    "valueTypeId": 301
  },
  "Vec<Modifier>": {
    "kind": "vec",
    "name": "Vec<Modifier>",
    "size": 32,
    "align": 8,
    "valueTypeId": 302
  },
  "Modifier": {
    "kind": "struct",
    "name": "Modifier",
    "serName": "Modifier",
    "size": 12,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      },
      {
        "name": "kind",
        "serName": "kind",
        "typeId": 303,
        "offset": 8,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "ModifierKind": {
    "kind": "enum",
    "name": "ModifierKind",
    "serName": "ModifierKind",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "Abstract",
        "discriminant": 0,
        "serValue": "abstract",
        "valueTypeId": null
      },
      {
        "name": "Accessor",
        "discriminant": 1,
        "serValue": "accessor",
        "valueTypeId": null
      },
      {
        "name": "Async",
        "discriminant": 2,
        "serValue": "async",
        "valueTypeId": null
      },
      {
        "name": "Const",
        "discriminant": 3,
        "serValue": "const",
        "valueTypeId": null
      },
      {
        "name": "Declare",
        "discriminant": 4,
        "serValue": "declare",
        "valueTypeId": null
      },
      {
        "name": "Default",
        "discriminant": 5,
        "serValue": "default",
        "valueTypeId": null
      },
      {
        "name": "Export",
        "discriminant": 6,
        "serValue": "export",
        "valueTypeId": null
      },
      {
        "name": "In",
        "discriminant": 7,
        "serValue": "in",
        "valueTypeId": null
      },
      {
        "name": "Public",
        "discriminant": 8,
        "serValue": "public",
        "valueTypeId": null
      },
      {
        "name": "Private",
        "discriminant": 9,
        "serValue": "private",
        "valueTypeId": null
      },
      {
        "name": "Protected",
        "discriminant": 10,
        "serValue": "protected",
        "valueTypeId": null
      },
      {
        "name": "Readonly",
        "discriminant": 11,
        "serValue": "readonly",
        "valueTypeId": null
      },
      {
        "name": "Static",
        "discriminant": 12,
        "serValue": "static",
        "valueTypeId": null
      },
      {
        "name": "Out",
        "discriminant": 13,
        "serValue": "out",
        "valueTypeId": null
      },
      {
        "name": "Override",
        "discriminant": 254,
        "serValue": "override",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "MethodDefinitionKind": {
    "kind": "enum",
    "name": "MethodDefinitionKind",
    "serName": "MethodDefinitionKind",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "Constructor",
        "discriminant": 0,
        "serValue": "constructor",
        "valueTypeId": null
      },
      {
        "name": "Method",
        "discriminant": 1,
        "serValue": "method",
        "valueTypeId": null
      },
      {
        "name": "Get",
        "discriminant": 2,
        "serValue": "get",
        "valueTypeId": null
      },
      {
        "name": "Set",
        "discriminant": 254,
        "serValue": "set",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Box<PropertyDefinition>": {
    "kind": "box",
    "name": "Box<PropertyDefinition>",
    "size": 8,
    "align": 8,
    "valueTypeId": 306
  },
  "PropertyDefinition": {
    "kind": "struct",
    "name": "PropertyDefinition",
    "serName": "PropertyDefinition",
    "size": 104,
    "align": 8,
    "fields": [
      {
        "name": "type",
        "serName": "type",
        "typeId": 307,
        "offset": 89,
        "flatten": false,
        "skip": false
      },
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 48,
        "flatten": true,
        "skip": false
      },
      {
        "name": "key",
        "serName": "key",
        "typeId": 91,
        "offset": 64,
        "flatten": false,
        "skip": false
      },
      {
        "name": "value",
        "serName": "value",
        "typeId": 267,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "computed",
        "serName": "computed",
        "typeId": 7,
        "offset": 90,
        "flatten": false,
        "skip": false
      },
      {
        "name": "static",
        "serName": "static",
        "typeId": 7,
        "offset": 91,
        "flatten": false,
        "skip": false
      },
      {
        "name": "declare",
        "serName": "declare",
        "typeId": 7,
        "offset": 92,
        "flatten": false,
        "skip": false
      },
      {
        "name": "override",
        "serName": "override",
        "typeId": 7,
        "offset": 93,
        "flatten": false,
        "skip": false
      },
      {
        "name": "optional",
        "serName": "optional",
        "typeId": 7,
        "offset": 94,
        "flatten": false,
        "skip": false
      },
      {
        "name": "definite",
        "serName": "definite",
        "typeId": 7,
        "offset": 95,
        "flatten": false,
        "skip": false
      },
      {
        "name": "readonly",
        "serName": "readonly",
        "typeId": 7,
        "offset": 96,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_annotation",
        "serName": "typeAnnotation",
        "typeId": 104,
        "offset": 56,
        "flatten": false,
        "skip": false
      },
      {
        "name": "accessibility",
        "serName": "accessibility",
        "typeId": 227,
        "offset": 88,
        "flatten": false,
        "skip": false
      },
      {
        "name": "decorators",
        "serName": "decorators",
        "typeId": 229,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": null,
    "transparent": false
  },
  "PropertyDefinitionType": {
    "kind": "enum",
    "name": "PropertyDefinitionType",
    "serName": "PropertyDefinitionType",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "PropertyDefinition",
        "discriminant": 0,
        "serValue": "PropertyDefinition",
        "valueTypeId": null
      },
      {
        "name": "TSAbstractPropertyDefinition",
        "discriminant": 254,
        "serValue": "TSAbstractPropertyDefinition",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Box<AccessorProperty>": {
    "kind": "box",
    "name": "Box<AccessorProperty>",
    "size": 8,
    "align": 8,
    "valueTypeId": 309
  },
  "AccessorProperty": {
    "kind": "struct",
    "name": "AccessorProperty",
    "serName": "AccessorProperty",
    "size": 88,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 48,
        "flatten": true,
        "skip": false
      },
      {
        "name": "key",
        "serName": "key",
        "typeId": 91,
        "offset": 56,
        "flatten": false,
        "skip": false
      },
      {
        "name": "value",
        "serName": "value",
        "typeId": 267,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "computed",
        "serName": "computed",
        "typeId": 7,
        "offset": 80,
        "flatten": false,
        "skip": false
      },
      {
        "name": "static",
        "serName": "static",
        "typeId": 7,
        "offset": 81,
        "flatten": false,
        "skip": false
      },
      {
        "name": "decorators",
        "serName": "decorators",
        "typeId": 229,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<Vec<TSClassImplements>>": {
    "kind": "option",
    "name": "Option<Vec<TSClassImplements>>",
    "size": 32,
    "align": 8,
    "valueTypeId": 311
  },
  "Vec<TSClassImplements>": {
    "kind": "vec",
    "name": "Vec<TSClassImplements>",
    "size": 32,
    "align": 8,
    "valueTypeId": 312
  },
  "TSClassImplements": {
    "kind": "struct",
    "name": "TSClassImplements",
    "serName": "TSClassImplements",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "expression",
        "serName": "expression",
        "typeId": 153,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 161,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<ConditionalExpression>": {
    "kind": "box",
    "name": "Box<ConditionalExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 314
  },
  "ConditionalExpression": {
    "kind": "struct",
    "name": "ConditionalExpression",
    "serName": "ConditionalExpression",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 48,
        "flatten": true,
        "skip": false
      },
      {
        "name": "test",
        "serName": "test",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "consequent",
        "serName": "consequent",
        "typeId": 29,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "alternate",
        "serName": "alternate",
        "typeId": 29,
        "offset": 32,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<ImportExpression>": {
    "kind": "box",
    "name": "Box<ImportExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 316
  },
  "ImportExpression": {
    "kind": "struct",
    "name": "ImportExpression",
    "serName": "ImportExpression",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 48,
        "flatten": true,
        "skip": false
      },
      {
        "name": "source",
        "serName": "source",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "arguments",
        "serName": "arguments",
        "typeId": 53,
        "offset": 16,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<LogicalExpression>": {
    "kind": "box",
    "name": "Box<LogicalExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 318
  },
  "LogicalExpression": {
    "kind": "struct",
    "name": "LogicalExpression",
    "serName": "LogicalExpression",
    "size": 48,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "left",
        "serName": "left",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "operator",
        "serName": "operator",
        "typeId": 319,
        "offset": 40,
        "flatten": false,
        "skip": false
      },
      {
        "name": "right",
        "serName": "right",
        "typeId": 29,
        "offset": 16,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "LogicalOperator": {
    "kind": "enum",
    "name": "LogicalOperator",
    "serName": "LogicalOperator",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "Or",
        "discriminant": 0,
        "serValue": "||",
        "valueTypeId": null
      },
      {
        "name": "And",
        "discriminant": 1,
        "serValue": "&&",
        "valueTypeId": null
      },
      {
        "name": "Coalesce",
        "discriminant": 254,
        "serValue": "??",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Box<NewExpression>": {
    "kind": "box",
    "name": "Box<NewExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 321
  },
  "NewExpression": {
    "kind": "struct",
    "name": "NewExpression",
    "serName": "NewExpression",
    "size": 64,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 48,
        "flatten": true,
        "skip": false
      },
      {
        "name": "callee",
        "serName": "callee",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "arguments",
        "serName": "arguments",
        "typeId": 277,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 161,
        "offset": 56,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<ObjectExpression>": {
    "kind": "box",
    "name": "Box<ObjectExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 323
  },
  "ObjectExpression": {
    "kind": "struct",
    "name": "ObjectExpression",
    "serName": "ObjectExpression",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "properties",
        "serName": "properties",
        "typeId": 324,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "trailing_comma",
        "serName": "trailing_comma",
        "typeId": 72,
        "offset": 40,
        "flatten": false,
        "skip": true
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<ObjectPropertyKind>": {
    "kind": "vec",
    "name": "Vec<ObjectPropertyKind>",
    "size": 32,
    "align": 8,
    "valueTypeId": 325
  },
  "ObjectPropertyKind": {
    "kind": "enum",
    "name": "ObjectPropertyKind",
    "serName": "ObjectPropertyKind",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "ObjectProperty",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 326
      },
      {
        "name": "SpreadProperty",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 69
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<ObjectProperty>": {
    "kind": "box",
    "name": "Box<ObjectProperty>",
    "size": 8,
    "align": 8,
    "valueTypeId": 327
  },
  "ObjectProperty": {
    "kind": "struct",
    "name": "ObjectProperty",
    "serName": "ObjectProperty",
    "size": 72,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "kind",
        "serName": "kind",
        "typeId": 328,
        "offset": 64,
        "flatten": false,
        "skip": false
      },
      {
        "name": "key",
        "serName": "key",
        "typeId": 91,
        "offset": 40,
        "flatten": false,
        "skip": false
      },
      {
        "name": "value",
        "serName": "value",
        "typeId": 29,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "init",
        "serName": "init",
        "typeId": 267,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "method",
        "serName": "method",
        "typeId": 7,
        "offset": 65,
        "flatten": false,
        "skip": false
      },
      {
        "name": "shorthand",
        "serName": "shorthand",
        "typeId": 7,
        "offset": 66,
        "flatten": false,
        "skip": false
      },
      {
        "name": "computed",
        "serName": "computed",
        "typeId": 7,
        "offset": 67,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "PropertyKind": {
    "kind": "enum",
    "name": "PropertyKind",
    "serName": "PropertyKind",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "Init",
        "discriminant": 0,
        "serValue": "init",
        "valueTypeId": null
      },
      {
        "name": "Get",
        "discriminant": 1,
        "serValue": "get",
        "valueTypeId": null
      },
      {
        "name": "Set",
        "discriminant": 254,
        "serValue": "set",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Box<ParenthesizedExpression>": {
    "kind": "box",
    "name": "Box<ParenthesizedExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 330
  },
  "ParenthesizedExpression": {
    "kind": "struct",
    "name": "ParenthesizedExpression",
    "serName": "ParenthesizedExpression",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "expression",
        "serName": "expression",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<SequenceExpression>": {
    "kind": "box",
    "name": "Box<SequenceExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 332
  },
  "SequenceExpression": {
    "kind": "struct",
    "name": "SequenceExpression",
    "serName": "SequenceExpression",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "expressions",
        "serName": "expressions",
        "typeId": 53,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TaggedTemplateExpression>": {
    "kind": "box",
    "name": "Box<TaggedTemplateExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 334
  },
  "TaggedTemplateExpression": {
    "kind": "struct",
    "name": "TaggedTemplateExpression",
    "serName": "TaggedTemplateExpression",
    "size": 104,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 88,
        "flatten": true,
        "skip": false
      },
      {
        "name": "tag",
        "serName": "tag",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "quasi",
        "serName": "quasi",
        "typeId": 48,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 161,
        "offset": 96,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<ThisExpression>": {
    "kind": "box",
    "name": "Box<ThisExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 336
  },
  "ThisExpression": {
    "kind": "struct",
    "name": "ThisExpression",
    "serName": "ThisExpression",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<UpdateExpression>": {
    "kind": "box",
    "name": "Box<UpdateExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 338
  },
  "UpdateExpression": {
    "kind": "struct",
    "name": "UpdateExpression",
    "serName": "UpdateExpression",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "operator",
        "serName": "operator",
        "typeId": 339,
        "offset": 24,
        "flatten": false,
        "skip": false
      },
      {
        "name": "prefix",
        "serName": "prefix",
        "typeId": 7,
        "offset": 25,
        "flatten": false,
        "skip": false
      },
      {
        "name": "argument",
        "serName": "argument",
        "typeId": 237,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "UpdateOperator": {
    "kind": "enum",
    "name": "UpdateOperator",
    "serName": "UpdateOperator",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "Increment",
        "discriminant": 0,
        "serValue": "++",
        "valueTypeId": null
      },
      {
        "name": "Decrement",
        "discriminant": 254,
        "serValue": "--",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Box<YieldExpression>": {
    "kind": "box",
    "name": "Box<YieldExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 341
  },
  "YieldExpression": {
    "kind": "struct",
    "name": "YieldExpression",
    "serName": "YieldExpression",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      },
      {
        "name": "delegate",
        "serName": "delegate",
        "typeId": 7,
        "offset": 24,
        "flatten": false,
        "skip": false
      },
      {
        "name": "argument",
        "serName": "argument",
        "typeId": 267,
        "offset": 8,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<PrivateInExpression>": {
    "kind": "box",
    "name": "Box<PrivateInExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 343
  },
  "PrivateInExpression": {
    "kind": "struct",
    "name": "PrivateInExpression",
    "serName": "PrivateInExpression",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 40,
        "flatten": true,
        "skip": false
      },
      {
        "name": "left",
        "serName": "left",
        "typeId": 94,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "operator",
        "serName": "operator",
        "typeId": 274,
        "offset": 48,
        "flatten": false,
        "skip": false
      },
      {
        "name": "right",
        "serName": "right",
        "typeId": 29,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<JSXElement>": {
    "kind": "box",
    "name": "Box<JSXElement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 345
  },
  "JSXElement": {
    "kind": "struct",
    "name": "JSXElement",
    "serName": "JSXElement",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 40,
        "flatten": true,
        "skip": false
      },
      {
        "name": "opening_element",
        "serName": "openingElement",
        "typeId": 346,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "closing_element",
        "serName": "closingElement",
        "typeId": 379,
        "offset": 48,
        "flatten": false,
        "skip": false
      },
      {
        "name": "children",
        "serName": "children",
        "typeId": 371,
        "offset": 8,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<JSXOpeningElement>": {
    "kind": "box",
    "name": "Box<JSXOpeningElement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 347
  },
  "JSXOpeningElement": {
    "kind": "struct",
    "name": "JSXOpeningElement",
    "serName": "JSXOpeningElement",
    "size": 72,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 48,
        "flatten": true,
        "skip": false
      },
      {
        "name": "self_closing",
        "serName": "selfClosing",
        "typeId": 7,
        "offset": 64,
        "flatten": false,
        "skip": false
      },
      {
        "name": "name",
        "serName": "name",
        "typeId": 348,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "attributes",
        "serName": "attributes",
        "typeId": 356,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 161,
        "offset": 56,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "JSXElementName": {
    "kind": "enum",
    "name": "JSXElementName",
    "serName": "JSXElementName",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "Identifier",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 349
      },
      {
        "name": "NamespacedName",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 351
      },
      {
        "name": "MemberExpression",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 353
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<JSXIdentifier>": {
    "kind": "box",
    "name": "Box<JSXIdentifier>",
    "size": 8,
    "align": 8,
    "valueTypeId": 350
  },
  "JSXIdentifier": {
    "kind": "struct",
    "name": "JSXIdentifier",
    "serName": "JSXIdentifier",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "name",
        "serName": "name",
        "typeId": 11,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<JSXNamespacedName>": {
    "kind": "box",
    "name": "Box<JSXNamespacedName>",
    "size": 8,
    "align": 8,
    "valueTypeId": 352
  },
  "JSXNamespacedName": {
    "kind": "struct",
    "name": "JSXNamespacedName",
    "serName": "JSXNamespacedName",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 48,
        "flatten": true,
        "skip": false
      },
      {
        "name": "namespace",
        "serName": "namespace",
        "typeId": 350,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "property",
        "serName": "property",
        "typeId": 350,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<JSXMemberExpression>": {
    "kind": "box",
    "name": "Box<JSXMemberExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 354
  },
  "JSXMemberExpression": {
    "kind": "struct",
    "name": "JSXMemberExpression",
    "serName": "JSXMemberExpression",
    "size": 48,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 40,
        "flatten": true,
        "skip": false
      },
      {
        "name": "object",
        "serName": "object",
        "typeId": 355,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "property",
        "serName": "property",
        "typeId": 350,
        "offset": 16,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "JSXMemberExpressionObject": {
    "kind": "enum",
    "name": "JSXMemberExpressionObject",
    "serName": "JSXMemberExpressionObject",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "Identifier",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 349
      },
      {
        "name": "MemberExpression",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 353
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Vec<JSXAttributeItem>": {
    "kind": "vec",
    "name": "Vec<JSXAttributeItem>",
    "size": 32,
    "align": 8,
    "valueTypeId": 357
  },
  "JSXAttributeItem": {
    "kind": "enum",
    "name": "JSXAttributeItem",
    "serName": "JSXAttributeItem",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "Attribute",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 358
      },
      {
        "name": "SpreadAttribute",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 377
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<JSXAttribute>": {
    "kind": "box",
    "name": "Box<JSXAttribute>",
    "size": 8,
    "align": 8,
    "valueTypeId": 359
  },
  "JSXAttribute": {
    "kind": "struct",
    "name": "JSXAttribute",
    "serName": "JSXAttribute",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "name",
        "serName": "name",
        "typeId": 360,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "value",
        "serName": "value",
        "typeId": 361,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "JSXAttributeName": {
    "kind": "enum",
    "name": "JSXAttributeName",
    "serName": "JSXAttributeName",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "Identifier",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 349
      },
      {
        "name": "NamespacedName",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 351
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Option<JSXAttributeValue>": {
    "kind": "option",
    "name": "Option<JSXAttributeValue>",
    "size": 16,
    "align": 8,
    "valueTypeId": 362
  },
  "JSXAttributeValue": {
    "kind": "enum",
    "name": "JSXAttributeValue",
    "serName": "JSXAttributeValue",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "StringLiteral",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 46
      },
      {
        "name": "ExpressionContainer",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 363
      },
      {
        "name": "Element",
        "discriminant": 2,
        "serValue": null,
        "valueTypeId": 344
      },
      {
        "name": "Fragment",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 367
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<JSXExpressionContainer>": {
    "kind": "box",
    "name": "Box<JSXExpressionContainer>",
    "size": 8,
    "align": 8,
    "valueTypeId": 364
  },
  "JSXExpressionContainer": {
    "kind": "struct",
    "name": "JSXExpressionContainer",
    "serName": "JSXExpressionContainer",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 24,
        "flatten": true,
        "skip": false
      },
      {
        "name": "expression",
        "serName": "expression",
        "typeId": 365,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "JSXExpression": {
    "kind": "enum",
    "name": "JSXExpression",
    "serName": "JSXExpression",
    "size": 24,
    "align": 8,
    "variants": [
      {
        "name": "Expression",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 29
      },
      {
        "name": "EmptyExpression",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 366
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "JSXEmptyExpression": {
    "kind": "struct",
    "name": "JSXEmptyExpression",
    "serName": "JSXEmptyExpression",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<JSXFragment>": {
    "kind": "box",
    "name": "Box<JSXFragment>",
    "size": 8,
    "align": 8,
    "valueTypeId": 368
  },
  "JSXFragment": {
    "kind": "struct",
    "name": "JSXFragment",
    "serName": "JSXFragment",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "opening_fragment",
        "serName": "openingFragment",
        "typeId": 369,
        "offset": 40,
        "flatten": false,
        "skip": false
      },
      {
        "name": "closing_fragment",
        "serName": "closingFragment",
        "typeId": 370,
        "offset": 48,
        "flatten": false,
        "skip": false
      },
      {
        "name": "children",
        "serName": "children",
        "typeId": 371,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "JSXOpeningFragment": {
    "kind": "struct",
    "name": "JSXOpeningFragment",
    "serName": "JSXOpeningFragment",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "JSXClosingFragment": {
    "kind": "struct",
    "name": "JSXClosingFragment",
    "serName": "JSXClosingFragment",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<JSXChild>": {
    "kind": "vec",
    "name": "Vec<JSXChild>",
    "size": 32,
    "align": 8,
    "valueTypeId": 372
  },
  "JSXChild": {
    "kind": "enum",
    "name": "JSXChild",
    "serName": "JSXChild",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "Text",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 373
      },
      {
        "name": "Element",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 344
      },
      {
        "name": "Fragment",
        "discriminant": 2,
        "serValue": null,
        "valueTypeId": 367
      },
      {
        "name": "ExpressionContainer",
        "discriminant": 3,
        "serValue": null,
        "valueTypeId": 363
      },
      {
        "name": "Spread",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 375
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<JSXText>": {
    "kind": "box",
    "name": "Box<JSXText>",
    "size": 8,
    "align": 8,
    "valueTypeId": 374
  },
  "JSXText": {
    "kind": "struct",
    "name": "JSXText",
    "serName": "JSXText",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "value",
        "serName": "value",
        "typeId": 11,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<JSXSpreadChild>": {
    "kind": "box",
    "name": "Box<JSXSpreadChild>",
    "size": 8,
    "align": 8,
    "valueTypeId": 376
  },
  "JSXSpreadChild": {
    "kind": "struct",
    "name": "JSXSpreadChild",
    "serName": "JSXSpreadChild",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "expression",
        "serName": "expression",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<JSXSpreadAttribute>": {
    "kind": "box",
    "name": "Box<JSXSpreadAttribute>",
    "size": 8,
    "align": 8,
    "valueTypeId": 378
  },
  "JSXSpreadAttribute": {
    "kind": "struct",
    "name": "JSXSpreadAttribute",
    "serName": "JSXSpreadAttribute",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "argument",
        "serName": "argument",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<Box<JSXClosingElement>>": {
    "kind": "option",
    "name": "Option<Box<JSXClosingElement>>",
    "size": 8,
    "align": 8,
    "valueTypeId": 380
  },
  "Box<JSXClosingElement>": {
    "kind": "box",
    "name": "Box<JSXClosingElement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 381
  },
  "JSXClosingElement": {
    "kind": "struct",
    "name": "JSXClosingElement",
    "serName": "JSXClosingElement",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "name",
        "serName": "name",
        "typeId": 348,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSInstantiationExpression>": {
    "kind": "box",
    "name": "Box<TSInstantiationExpression>",
    "size": 8,
    "align": 8,
    "valueTypeId": 383
  },
  "TSInstantiationExpression": {
    "kind": "struct",
    "name": "TSInstantiationExpression",
    "serName": "TSInstantiationExpression",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 24,
        "flatten": true,
        "skip": false
      },
      {
        "name": "expression",
        "serName": "expression",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 162,
        "offset": 16,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<EmptyStatement>": {
    "kind": "box",
    "name": "Box<EmptyStatement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 385
  },
  "EmptyStatement": {
    "kind": "struct",
    "name": "EmptyStatement",
    "serName": "EmptyStatement",
    "size": 8,
    "align": 4,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<ExpressionStatement>": {
    "kind": "box",
    "name": "Box<ExpressionStatement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 387
  },
  "ExpressionStatement": {
    "kind": "struct",
    "name": "ExpressionStatement",
    "serName": "ExpressionStatement",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "expression",
        "serName": "expression",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<ForInStatement>": {
    "kind": "box",
    "name": "Box<ForInStatement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 389
  },
  "ForInStatement": {
    "kind": "struct",
    "name": "ForInStatement",
    "serName": "ForInStatement",
    "size": 72,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 64,
        "flatten": true,
        "skip": false
      },
      {
        "name": "left",
        "serName": "left",
        "typeId": 390,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "right",
        "serName": "right",
        "typeId": 29,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "body",
        "serName": "body",
        "typeId": 16,
        "offset": 48,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "ForStatementLeft": {
    "kind": "enum",
    "name": "ForStatementLeft",
    "serName": "ForStatementLeft",
    "size": 32,
    "align": 8,
    "variants": [
      {
        "name": "VariableDeclaration",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 391
      },
      {
        "name": "AssignmentTarget",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 236
      },
      {
        "name": "UsingDeclaration",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 396
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<VariableDeclaration>": {
    "kind": "box",
    "name": "Box<VariableDeclaration>",
    "size": 8,
    "align": 8,
    "valueTypeId": 392
  },
  "VariableDeclaration": {
    "kind": "struct",
    "name": "VariableDeclaration",
    "serName": "VariableDeclaration",
    "size": 80,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "kind",
        "serName": "kind",
        "typeId": 393,
        "offset": 72,
        "flatten": false,
        "skip": false
      },
      {
        "name": "declarations",
        "serName": "declarations",
        "typeId": 394,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "modifiers",
        "serName": "modifiers",
        "typeId": 299,
        "offset": 40,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "VariableDeclarationKind": {
    "kind": "enum",
    "name": "VariableDeclarationKind",
    "serName": "VariableDeclarationKind",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "Var",
        "discriminant": 0,
        "serValue": "var",
        "valueTypeId": null
      },
      {
        "name": "Const",
        "discriminant": 1,
        "serValue": "const",
        "valueTypeId": null
      },
      {
        "name": "Let",
        "discriminant": 254,
        "serValue": "let",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Vec<VariableDeclarator>": {
    "kind": "vec",
    "name": "Vec<VariableDeclarator>",
    "size": 32,
    "align": 8,
    "valueTypeId": 395
  },
  "VariableDeclarator": {
    "kind": "struct",
    "name": "VariableDeclarator",
    "serName": "VariableDeclarator",
    "size": 64,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "kind",
        "serName": "kind",
        "typeId": 393,
        "offset": 56,
        "flatten": false,
        "skip": true
      },
      {
        "name": "id",
        "serName": "id",
        "typeId": 80,
        "offset": 24,
        "flatten": false,
        "skip": false
      },
      {
        "name": "init",
        "serName": "init",
        "typeId": 267,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "definite",
        "serName": "definite",
        "typeId": 7,
        "offset": 57,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<UsingDeclaration>": {
    "kind": "box",
    "name": "Box<UsingDeclaration>",
    "size": 8,
    "align": 8,
    "valueTypeId": 397
  },
  "UsingDeclaration": {
    "kind": "struct",
    "name": "UsingDeclaration",
    "serName": "UsingDeclaration",
    "size": 48,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "is_await",
        "serName": "isAwait",
        "typeId": 7,
        "offset": 40,
        "flatten": false,
        "skip": false
      },
      {
        "name": "declarations",
        "serName": "declarations",
        "typeId": 394,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<ForOfStatement>": {
    "kind": "box",
    "name": "Box<ForOfStatement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 399
  },
  "ForOfStatement": {
    "kind": "struct",
    "name": "ForOfStatement",
    "serName": "ForOfStatement",
    "size": 80,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 64,
        "flatten": true,
        "skip": false
      },
      {
        "name": "await",
        "serName": "await",
        "typeId": 7,
        "offset": 72,
        "flatten": false,
        "skip": false
      },
      {
        "name": "left",
        "serName": "left",
        "typeId": 390,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "right",
        "serName": "right",
        "typeId": 29,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "body",
        "serName": "body",
        "typeId": 16,
        "offset": 48,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<ForStatement>": {
    "kind": "box",
    "name": "Box<ForStatement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 401
  },
  "ForStatement": {
    "kind": "struct",
    "name": "ForStatement",
    "serName": "ForStatement",
    "size": 80,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "init",
        "serName": "init",
        "typeId": 402,
        "offset": 24,
        "flatten": false,
        "skip": false
      },
      {
        "name": "test",
        "serName": "test",
        "typeId": 267,
        "offset": 48,
        "flatten": false,
        "skip": false
      },
      {
        "name": "update",
        "serName": "update",
        "typeId": 267,
        "offset": 64,
        "flatten": false,
        "skip": false
      },
      {
        "name": "body",
        "serName": "body",
        "typeId": 16,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<ForStatementInit>": {
    "kind": "option",
    "name": "Option<ForStatementInit>",
    "size": 24,
    "align": 8,
    "valueTypeId": 403
  },
  "ForStatementInit": {
    "kind": "enum",
    "name": "ForStatementInit",
    "serName": "ForStatementInit",
    "size": 24,
    "align": 8,
    "variants": [
      {
        "name": "VariableDeclaration",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 391
      },
      {
        "name": "Expression",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 29
      },
      {
        "name": "UsingDeclaration",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 396
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<IfStatement>": {
    "kind": "box",
    "name": "Box<IfStatement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 405
  },
  "IfStatement": {
    "kind": "struct",
    "name": "IfStatement",
    "serName": "IfStatement",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "test",
        "serName": "test",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "consequent",
        "serName": "consequent",
        "typeId": 16,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "alternate",
        "serName": "alternate",
        "typeId": 406,
        "offset": 40,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<Statement>": {
    "kind": "option",
    "name": "Option<Statement>",
    "size": 16,
    "align": 8,
    "valueTypeId": 16
  },
  "Box<LabeledStatement>": {
    "kind": "box",
    "name": "Box<LabeledStatement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 408
  },
  "LabeledStatement": {
    "kind": "struct",
    "name": "LabeledStatement",
    "serName": "LabeledStatement",
    "size": 48,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 40,
        "flatten": true,
        "skip": false
      },
      {
        "name": "label",
        "serName": "label",
        "typeId": 22,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "body",
        "serName": "body",
        "typeId": 16,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<ReturnStatement>": {
    "kind": "box",
    "name": "Box<ReturnStatement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 410
  },
  "ReturnStatement": {
    "kind": "struct",
    "name": "ReturnStatement",
    "serName": "ReturnStatement",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "argument",
        "serName": "argument",
        "typeId": 267,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<SwitchStatement>": {
    "kind": "box",
    "name": "Box<SwitchStatement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 412
  },
  "SwitchStatement": {
    "kind": "struct",
    "name": "SwitchStatement",
    "serName": "SwitchStatement",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 48,
        "flatten": true,
        "skip": false
      },
      {
        "name": "discriminant",
        "serName": "discriminant",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "cases",
        "serName": "cases",
        "typeId": 413,
        "offset": 16,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<SwitchCase>": {
    "kind": "vec",
    "name": "Vec<SwitchCase>",
    "size": 32,
    "align": 8,
    "valueTypeId": 414
  },
  "SwitchCase": {
    "kind": "struct",
    "name": "SwitchCase",
    "serName": "SwitchCase",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "test",
        "serName": "test",
        "typeId": 267,
        "offset": 40,
        "flatten": false,
        "skip": false
      },
      {
        "name": "consequent",
        "serName": "consequent",
        "typeId": 15,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<ThrowStatement>": {
    "kind": "box",
    "name": "Box<ThrowStatement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 416
  },
  "ThrowStatement": {
    "kind": "struct",
    "name": "ThrowStatement",
    "serName": "ThrowStatement",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "argument",
        "serName": "argument",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TryStatement>": {
    "kind": "box",
    "name": "Box<TryStatement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 418
  },
  "TryStatement": {
    "kind": "struct",
    "name": "TryStatement",
    "serName": "TryStatement",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 8,
        "flatten": true,
        "skip": false
      },
      {
        "name": "block",
        "serName": "block",
        "typeId": 17,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "handler",
        "serName": "handler",
        "typeId": 419,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "finalizer",
        "serName": "finalizer",
        "typeId": 424,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<Box<CatchClause>>": {
    "kind": "option",
    "name": "Option<Box<CatchClause>>",
    "size": 8,
    "align": 8,
    "valueTypeId": 420
  },
  "Box<CatchClause>": {
    "kind": "box",
    "name": "Box<CatchClause>",
    "size": 8,
    "align": 8,
    "valueTypeId": 421
  },
  "CatchClause": {
    "kind": "struct",
    "name": "CatchClause",
    "serName": "CatchClause",
    "size": 56,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      },
      {
        "name": "param",
        "serName": "param",
        "typeId": 422,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "body",
        "serName": "body",
        "typeId": 17,
        "offset": 8,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<CatchParameter>": {
    "kind": "option",
    "name": "Option<CatchParameter>",
    "size": 40,
    "align": 8,
    "valueTypeId": 423
  },
  "CatchParameter": {
    "kind": "struct",
    "name": "CatchParameter",
    "serName": "CatchParameter",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 0,
        "flatten": true,
        "skip": false
      },
      {
        "name": "pattern",
        "serName": "pattern",
        "typeId": 80,
        "offset": 8,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<Box<BlockStatement>>": {
    "kind": "option",
    "name": "Option<Box<BlockStatement>>",
    "size": 8,
    "align": 8,
    "valueTypeId": 17
  },
  "Box<WhileStatement>": {
    "kind": "box",
    "name": "Box<WhileStatement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 426
  },
  "WhileStatement": {
    "kind": "struct",
    "name": "WhileStatement",
    "serName": "WhileStatement",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "test",
        "serName": "test",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "body",
        "serName": "body",
        "typeId": 16,
        "offset": 16,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<WithStatement>": {
    "kind": "box",
    "name": "Box<WithStatement>",
    "size": 8,
    "align": 8,
    "valueTypeId": 428
  },
  "WithStatement": {
    "kind": "struct",
    "name": "WithStatement",
    "serName": "WithStatement",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "object",
        "serName": "object",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "body",
        "serName": "body",
        "typeId": 16,
        "offset": 16,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<ModuleDeclaration>": {
    "kind": "box",
    "name": "Box<ModuleDeclaration>",
    "size": 8,
    "align": 8,
    "valueTypeId": 430
  },
  "ModuleDeclaration": {
    "kind": "enum",
    "name": "ModuleDeclaration",
    "serName": "ModuleDeclaration",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "ImportDeclaration",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 431
      },
      {
        "name": "ExportAllDeclaration",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 449
      },
      {
        "name": "ExportDefaultDeclaration",
        "discriminant": 2,
        "serValue": null,
        "valueTypeId": 452
      },
      {
        "name": "ExportNamedDeclaration",
        "discriminant": 3,
        "serValue": null,
        "valueTypeId": 467
      },
      {
        "name": "TSExportAssignment",
        "discriminant": 4,
        "serValue": null,
        "valueTypeId": 489
      },
      {
        "name": "TSNamespaceExportDeclaration",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 491
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<ImportDeclaration>": {
    "kind": "box",
    "name": "Box<ImportDeclaration>",
    "size": 8,
    "align": 8,
    "valueTypeId": 432
  },
  "ImportDeclaration": {
    "kind": "struct",
    "name": "ImportDeclaration",
    "serName": "ImportDeclaration",
    "size": 136,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 24,
        "flatten": true,
        "skip": false
      },
      {
        "name": "specifiers",
        "serName": "specifiers",
        "typeId": 433,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "source",
        "serName": "source",
        "typeId": 10,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "with_clause",
        "serName": "withClause",
        "typeId": 444,
        "offset": 64,
        "flatten": false,
        "skip": false
      },
      {
        "name": "import_kind",
        "serName": "importKind",
        "typeId": 439,
        "offset": 128,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<Vec<ImportDeclarationSpecifier>>": {
    "kind": "option",
    "name": "Option<Vec<ImportDeclarationSpecifier>>",
    "size": 32,
    "align": 8,
    "valueTypeId": 434
  },
  "Vec<ImportDeclarationSpecifier>": {
    "kind": "vec",
    "name": "Vec<ImportDeclarationSpecifier>",
    "size": 32,
    "align": 8,
    "valueTypeId": 435
  },
  "ImportDeclarationSpecifier": {
    "kind": "enum",
    "name": "ImportDeclarationSpecifier",
    "serName": "ImportDeclarationSpecifier",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "ImportSpecifier",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 436
      },
      {
        "name": "ImportDefaultSpecifier",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 440
      },
      {
        "name": "ImportNamespaceSpecifier",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 442
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<ImportSpecifier>": {
    "kind": "box",
    "name": "Box<ImportSpecifier>",
    "size": 8,
    "align": 8,
    "valueTypeId": 437
  },
  "ImportSpecifier": {
    "kind": "struct",
    "name": "ImportSpecifier",
    "serName": "ImportSpecifier",
    "size": 80,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 64,
        "flatten": true,
        "skip": false
      },
      {
        "name": "imported",
        "serName": "imported",
        "typeId": 438,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "local",
        "serName": "local",
        "typeId": 83,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "import_kind",
        "serName": "importKind",
        "typeId": 439,
        "offset": 72,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "ModuleExportName": {
    "kind": "enum",
    "name": "ModuleExportName",
    "serName": "ModuleExportName",
    "size": 32,
    "align": 8,
    "variants": [
      {
        "name": "Identifier",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 62
      },
      {
        "name": "StringLiteral",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 10
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "ImportOrExportKind": {
    "kind": "enum",
    "name": "ImportOrExportKind",
    "serName": "ImportOrExportKind",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "Value",
        "discriminant": 0,
        "serValue": "value",
        "valueTypeId": null
      },
      {
        "name": "Type",
        "discriminant": 254,
        "serValue": "type",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Box<ImportDefaultSpecifier>": {
    "kind": "box",
    "name": "Box<ImportDefaultSpecifier>",
    "size": 8,
    "align": 8,
    "valueTypeId": 441
  },
  "ImportDefaultSpecifier": {
    "kind": "struct",
    "name": "ImportDefaultSpecifier",
    "serName": "ImportDefaultSpecifier",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "local",
        "serName": "local",
        "typeId": 83,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<ImportNamespaceSpecifier>": {
    "kind": "box",
    "name": "Box<ImportNamespaceSpecifier>",
    "size": 8,
    "align": 8,
    "valueTypeId": 443
  },
  "ImportNamespaceSpecifier": {
    "kind": "struct",
    "name": "ImportNamespaceSpecifier",
    "serName": "ImportNamespaceSpecifier",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "local",
        "serName": "local",
        "typeId": 83,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<WithClause>": {
    "kind": "option",
    "name": "Option<WithClause>",
    "size": 64,
    "align": 8,
    "valueTypeId": 445
  },
  "WithClause": {
    "kind": "struct",
    "name": "WithClause",
    "serName": "WithClause",
    "size": 64,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 56,
        "flatten": true,
        "skip": false
      },
      {
        "name": "attributes_keyword",
        "serName": "attributesKeyword",
        "typeId": 62,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "with_entries",
        "serName": "withEntries",
        "typeId": 446,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<ImportAttribute>": {
    "kind": "vec",
    "name": "Vec<ImportAttribute>",
    "size": 32,
    "align": 8,
    "valueTypeId": 447
  },
  "ImportAttribute": {
    "kind": "struct",
    "name": "ImportAttribute",
    "serName": "ImportAttribute",
    "size": 64,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 56,
        "flatten": true,
        "skip": false
      },
      {
        "name": "key",
        "serName": "key",
        "typeId": 448,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "value",
        "serName": "value",
        "typeId": 10,
        "offset": 32,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "ImportAttributeKey": {
    "kind": "enum",
    "name": "ImportAttributeKey",
    "serName": "ImportAttributeKey",
    "size": 32,
    "align": 8,
    "variants": [
      {
        "name": "Identifier",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 62
      },
      {
        "name": "StringLiteral",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 10
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<ExportAllDeclaration>": {
    "kind": "box",
    "name": "Box<ExportAllDeclaration>",
    "size": 8,
    "align": 8,
    "valueTypeId": 450
  },
  "ExportAllDeclaration": {
    "kind": "struct",
    "name": "ExportAllDeclaration",
    "serName": "ExportAllDeclaration",
    "size": 136,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 24,
        "flatten": true,
        "skip": false
      },
      {
        "name": "exported",
        "serName": "exported",
        "typeId": 451,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "source",
        "serName": "source",
        "typeId": 10,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "with_clause",
        "serName": "withClause",
        "typeId": 444,
        "offset": 64,
        "flatten": false,
        "skip": false
      },
      {
        "name": "export_kind",
        "serName": "exportKind",
        "typeId": 439,
        "offset": 128,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<ModuleExportName>": {
    "kind": "option",
    "name": "Option<ModuleExportName>",
    "size": 32,
    "align": 8,
    "valueTypeId": 438
  },
  "Box<ExportDefaultDeclaration>": {
    "kind": "box",
    "name": "Box<ExportDefaultDeclaration>",
    "size": 8,
    "align": 8,
    "valueTypeId": 453
  },
  "ExportDefaultDeclaration": {
    "kind": "struct",
    "name": "ExportDefaultDeclaration",
    "serName": "ExportDefaultDeclaration",
    "size": 64,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 56,
        "flatten": true,
        "skip": false
      },
      {
        "name": "declaration",
        "serName": "declaration",
        "typeId": 454,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "exported",
        "serName": "exported",
        "typeId": 438,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "ExportDefaultDeclarationKind": {
    "kind": "enum",
    "name": "ExportDefaultDeclarationKind",
    "serName": "ExportDefaultDeclarationKind",
    "size": 24,
    "align": 8,
    "variants": [
      {
        "name": "Expression",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 29
      },
      {
        "name": "FunctionDeclaration",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 295
      },
      {
        "name": "ClassDeclaration",
        "discriminant": 2,
        "serValue": null,
        "valueTypeId": 282
      },
      {
        "name": "TSInterfaceDeclaration",
        "discriminant": 3,
        "serValue": null,
        "valueTypeId": 455
      },
      {
        "name": "TSEnumDeclaration",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 462
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<TSInterfaceDeclaration>": {
    "kind": "box",
    "name": "Box<TSInterfaceDeclaration>",
    "size": 8,
    "align": 8,
    "valueTypeId": 456
  },
  "TSInterfaceDeclaration": {
    "kind": "struct",
    "name": "TSInterfaceDeclaration",
    "serName": "TSInterfaceDeclaration",
    "size": 120,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 40,
        "flatten": true,
        "skip": false
      },
      {
        "name": "id",
        "serName": "id",
        "typeId": 83,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "body",
        "serName": "body",
        "typeId": 457,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 140,
        "offset": 48,
        "flatten": false,
        "skip": false
      },
      {
        "name": "extends",
        "serName": "extends",
        "typeId": 459,
        "offset": 56,
        "flatten": false,
        "skip": false
      },
      {
        "name": "modifiers",
        "serName": "modifiers",
        "typeId": 299,
        "offset": 88,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSInterfaceBody>": {
    "kind": "box",
    "name": "Box<TSInterfaceBody>",
    "size": 8,
    "align": 8,
    "valueTypeId": 458
  },
  "TSInterfaceBody": {
    "kind": "struct",
    "name": "TSInterfaceBody",
    "serName": "TSInterfaceBody",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "body",
        "serName": "body",
        "typeId": 195,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<Vec<TSInterfaceHeritage>>": {
    "kind": "option",
    "name": "Option<Vec<TSInterfaceHeritage>>",
    "size": 32,
    "align": 8,
    "valueTypeId": 460
  },
  "Vec<TSInterfaceHeritage>": {
    "kind": "vec",
    "name": "Vec<TSInterfaceHeritage>",
    "size": 32,
    "align": 8,
    "valueTypeId": 461
  },
  "TSInterfaceHeritage": {
    "kind": "struct",
    "name": "TSInterfaceHeritage",
    "serName": "TSInterfaceHeritage",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "expression",
        "serName": "expression",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 161,
        "offset": 24,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSEnumDeclaration>": {
    "kind": "box",
    "name": "Box<TSEnumDeclaration>",
    "size": 8,
    "align": 8,
    "valueTypeId": 463
  },
  "TSEnumDeclaration": {
    "kind": "struct",
    "name": "TSEnumDeclaration",
    "serName": "TSEnumDeclaration",
    "size": 104,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 64,
        "flatten": true,
        "skip": false
      },
      {
        "name": "id",
        "serName": "id",
        "typeId": 83,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "members",
        "serName": "members",
        "typeId": 464,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "modifiers",
        "serName": "modifiers",
        "typeId": 299,
        "offset": 72,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<TSEnumMember>": {
    "kind": "vec",
    "name": "Vec<TSEnumMember>",
    "size": 32,
    "align": 8,
    "valueTypeId": 465
  },
  "TSEnumMember": {
    "kind": "struct",
    "name": "TSEnumMember",
    "serName": "TSEnumMember",
    "size": 48,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 24,
        "flatten": true,
        "skip": false
      },
      {
        "name": "id",
        "serName": "id",
        "typeId": 466,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "initializer",
        "serName": "initializer",
        "typeId": 267,
        "offset": 32,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "TSEnumMemberName": {
    "kind": "enum",
    "name": "TSEnumMemberName",
    "serName": "TSEnumMemberName",
    "size": 24,
    "align": 8,
    "variants": [
      {
        "name": "Identifier",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 92
      },
      {
        "name": "StringLiteral",
        "discriminant": 1,
        "serValue": null,
        "valueTypeId": 46
      },
      {
        "name": "ComputedPropertyName",
        "discriminant": 2,
        "serValue": null,
        "valueTypeId": 29
      },
      {
        "name": "NumericLiteral",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 34
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<ExportNamedDeclaration>": {
    "kind": "box",
    "name": "Box<ExportNamedDeclaration>",
    "size": 8,
    "align": 8,
    "valueTypeId": 468
  },
  "ExportNamedDeclaration": {
    "kind": "struct",
    "name": "ExportNamedDeclaration",
    "serName": "ExportNamedDeclaration",
    "size": 152,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 48,
        "flatten": true,
        "skip": false
      },
      {
        "name": "declaration",
        "serName": "declaration",
        "typeId": 469,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "specifiers",
        "serName": "specifiers",
        "typeId": 486,
        "offset": 16,
        "flatten": false,
        "skip": false
      },
      {
        "name": "source",
        "serName": "source",
        "typeId": 488,
        "offset": 56,
        "flatten": false,
        "skip": false
      },
      {
        "name": "export_kind",
        "serName": "exportKind",
        "typeId": 439,
        "offset": 144,
        "flatten": false,
        "skip": false
      },
      {
        "name": "with_clause",
        "serName": "withClause",
        "typeId": 444,
        "offset": 80,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<Declaration>": {
    "kind": "option",
    "name": "Option<Declaration>",
    "size": 16,
    "align": 8,
    "valueTypeId": 470
  },
  "Declaration": {
    "kind": "enum",
    "name": "Declaration",
    "serName": "Declaration",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "VariableDeclaration",
        "discriminant": 19,
        "serValue": null,
        "valueTypeId": 391
      },
      {
        "name": "FunctionDeclaration",
        "discriminant": 21,
        "serValue": null,
        "valueTypeId": 295
      },
      {
        "name": "ClassDeclaration",
        "discriminant": 22,
        "serValue": null,
        "valueTypeId": 282
      },
      {
        "name": "UsingDeclaration",
        "discriminant": 23,
        "serValue": null,
        "valueTypeId": 396
      },
      {
        "name": "TSTypeAliasDeclaration",
        "discriminant": 24,
        "serValue": null,
        "valueTypeId": 471
      },
      {
        "name": "TSInterfaceDeclaration",
        "discriminant": 25,
        "serValue": null,
        "valueTypeId": 455
      },
      {
        "name": "TSEnumDeclaration",
        "discriminant": 26,
        "serValue": null,
        "valueTypeId": 462
      },
      {
        "name": "TSModuleDeclaration",
        "discriminant": 27,
        "serValue": null,
        "valueTypeId": 473
      },
      {
        "name": "TSImportEqualsDeclaration",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 481
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<TSTypeAliasDeclaration>": {
    "kind": "box",
    "name": "Box<TSTypeAliasDeclaration>",
    "size": 8,
    "align": 8,
    "valueTypeId": 472
  },
  "TSTypeAliasDeclaration": {
    "kind": "struct",
    "name": "TSTypeAliasDeclaration",
    "serName": "TSTypeAliasDeclaration",
    "size": 96,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 48,
        "flatten": true,
        "skip": false
      },
      {
        "name": "id",
        "serName": "id",
        "typeId": 83,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_annotation",
        "serName": "typeAnnotation",
        "typeId": 107,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "type_parameters",
        "serName": "typeParameters",
        "typeId": 140,
        "offset": 56,
        "flatten": false,
        "skip": false
      },
      {
        "name": "modifiers",
        "serName": "modifiers",
        "typeId": 299,
        "offset": 64,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSModuleDeclaration>": {
    "kind": "box",
    "name": "Box<TSModuleDeclaration>",
    "size": 8,
    "align": 8,
    "valueTypeId": 474
  },
  "TSModuleDeclaration": {
    "kind": "struct",
    "name": "TSModuleDeclaration",
    "serName": "TSModuleDeclaration",
    "size": 96,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "id",
        "serName": "id",
        "typeId": 475,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "body",
        "serName": "body",
        "typeId": 476,
        "offset": 40,
        "flatten": false,
        "skip": false
      },
      {
        "name": "kind",
        "serName": "kind",
        "typeId": 480,
        "offset": 88,
        "flatten": false,
        "skip": false
      },
      {
        "name": "modifiers",
        "serName": "modifiers",
        "typeId": 299,
        "offset": 56,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "TSModuleDeclarationName": {
    "kind": "enum",
    "name": "TSModuleDeclarationName",
    "serName": "TSModuleDeclarationName",
    "size": 32,
    "align": 8,
    "variants": [
      {
        "name": "Identifier",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 62
      },
      {
        "name": "StringLiteral",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 10
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Option<TSModuleDeclarationBody>": {
    "kind": "option",
    "name": "Option<TSModuleDeclarationBody>",
    "size": 16,
    "align": 8,
    "valueTypeId": 477
  },
  "TSModuleDeclarationBody": {
    "kind": "enum",
    "name": "TSModuleDeclarationBody",
    "serName": "TSModuleDeclarationBody",
    "size": 16,
    "align": 8,
    "variants": [
      {
        "name": "TSModuleDeclaration",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 473
      },
      {
        "name": "TSModuleBlock",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 478
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<TSModuleBlock>": {
    "kind": "box",
    "name": "Box<TSModuleBlock>",
    "size": 8,
    "align": 8,
    "valueTypeId": 479
  },
  "TSModuleBlock": {
    "kind": "struct",
    "name": "TSModuleBlock",
    "serName": "TSModuleBlock",
    "size": 40,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 32,
        "flatten": true,
        "skip": false
      },
      {
        "name": "body",
        "serName": "body",
        "typeId": 15,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "TSModuleDeclarationKind": {
    "kind": "enum",
    "name": "TSModuleDeclarationKind",
    "serName": "TSModuleDeclarationKind",
    "size": 1,
    "align": 1,
    "variants": [
      {
        "name": "Global",
        "discriminant": 0,
        "serValue": "global",
        "valueTypeId": null
      },
      {
        "name": "Module",
        "discriminant": 1,
        "serValue": "module",
        "valueTypeId": null
      },
      {
        "name": "Namespace",
        "discriminant": 254,
        "serValue": "namespace",
        "valueTypeId": null
      }
    ],
    "tag": {
      "kind": "none"
    }
  },
  "Box<TSImportEqualsDeclaration>": {
    "kind": "box",
    "name": "Box<TSImportEqualsDeclaration>",
    "size": 8,
    "align": 8,
    "valueTypeId": 482
  },
  "TSImportEqualsDeclaration": {
    "kind": "struct",
    "name": "TSImportEqualsDeclaration",
    "serName": "TSImportEqualsDeclaration",
    "size": 72,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 56,
        "flatten": true,
        "skip": false
      },
      {
        "name": "id",
        "serName": "id",
        "typeId": 83,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "module_reference",
        "serName": "moduleReference",
        "typeId": 483,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "import_kind",
        "serName": "importKind",
        "typeId": 439,
        "offset": 64,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "TSModuleReference": {
    "kind": "enum",
    "name": "TSModuleReference",
    "serName": "TSModuleReference",
    "size": 24,
    "align": 8,
    "variants": [
      {
        "name": "TypeName",
        "discriminant": 0,
        "serValue": null,
        "valueTypeId": 153
      },
      {
        "name": "ExternalModuleReference",
        "discriminant": 254,
        "serValue": null,
        "valueTypeId": 484
      }
    ],
    "tag": {
      "kind": "untagged"
    }
  },
  "Box<TSExternalModuleReference>": {
    "kind": "box",
    "name": "Box<TSExternalModuleReference>",
    "size": 8,
    "align": 8,
    "valueTypeId": 485
  },
  "TSExternalModuleReference": {
    "kind": "struct",
    "name": "TSExternalModuleReference",
    "serName": "TSExternalModuleReference",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 24,
        "flatten": true,
        "skip": false
      },
      {
        "name": "expression",
        "serName": "expression",
        "typeId": 10,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Vec<ExportSpecifier>": {
    "kind": "vec",
    "name": "Vec<ExportSpecifier>",
    "size": 32,
    "align": 8,
    "valueTypeId": 487
  },
  "ExportSpecifier": {
    "kind": "struct",
    "name": "ExportSpecifier",
    "serName": "ExportSpecifier",
    "size": 80,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 64,
        "flatten": true,
        "skip": false
      },
      {
        "name": "local",
        "serName": "local",
        "typeId": 438,
        "offset": 0,
        "flatten": false,
        "skip": false
      },
      {
        "name": "exported",
        "serName": "exported",
        "typeId": 438,
        "offset": 32,
        "flatten": false,
        "skip": false
      },
      {
        "name": "export_kind",
        "serName": "exportKind",
        "typeId": 439,
        "offset": 72,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Option<StringLiteral>": {
    "kind": "option",
    "name": "Option<StringLiteral>",
    "size": 24,
    "align": 8,
    "valueTypeId": 10
  },
  "Box<TSExportAssignment>": {
    "kind": "box",
    "name": "Box<TSExportAssignment>",
    "size": 8,
    "align": 8,
    "valueTypeId": 490
  },
  "TSExportAssignment": {
    "kind": "struct",
    "name": "TSExportAssignment",
    "serName": "TSExportAssignment",
    "size": 24,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 16,
        "flatten": true,
        "skip": false
      },
      {
        "name": "expression",
        "serName": "expression",
        "typeId": 29,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  },
  "Box<TSNamespaceExportDeclaration>": {
    "kind": "box",
    "name": "Box<TSNamespaceExportDeclaration>",
    "size": 8,
    "align": 8,
    "valueTypeId": 492
  },
  "TSNamespaceExportDeclaration": {
    "kind": "struct",
    "name": "TSNamespaceExportDeclaration",
    "serName": "TSNamespaceExportDeclaration",
    "size": 32,
    "align": 8,
    "fields": [
      {
        "name": "span",
        "serName": "span",
        "typeId": 1,
        "offset": 24,
        "flatten": true,
        "skip": false
      },
      {
        "name": "id",
        "serName": "id",
        "typeId": 62,
        "offset": 0,
        "flatten": false,
        "skip": false
      }
    ],
    "tag": "type",
    "transparent": false
  }
}